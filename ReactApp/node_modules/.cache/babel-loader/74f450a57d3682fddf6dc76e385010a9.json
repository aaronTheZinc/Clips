{"ast":null,"code":"import React, { useContext } from \"react\";\nimport app from \"firebase/app\";\nimport \"firebase/auth\";\nimport { registerUser } from \"../Backend/api\";\nimport { appState } from \"./Context\";\nimport Cookies from \"./cookies\";\nimport { useHistory } from \"react-router-dom\";\nconst config = {\n  apiKey: \"AIzaSyCCe3EZBhYzzDDjVhYp2DWULin4ItgIjKA\",\n  authDomain: \"clips-e8ad8.firebaseapp.com\",\n  projectId: \"clips-e8ad8\",\n  storageBucket: \"clips-e8ad8.appspot.com\",\n  messagingSenderId: \"38161657877\",\n  appId: \"1:38161657877:web:30befe0a6d2ef3e4139e1c\",\n  measurementId: \"G-P0Y59FWJ03\"\n};\napp.initializeApp(config);\nconst auth = app.auth();\nexport const fb_auth = auth;\nexport const doCreateUserWithEmailAndPassword = ({\n  email,\n  password,\n  username\n}, next) => {\n  alert();\n  const user = auth.createUserWithEmailAndPassword(email, password);\n  console.log(auth.currentUser.uid);\n  registerUser({\n    data: {\n      email: email,\n      username: username,\n      uid: auth.currentUser.uid\n    }\n  });\n  next();\n};\nexport const doSignInWithEmailAndPassword = async ({\n  email,\n  password\n}, next) => {\n  const login = await auth.signInWithEmailAndPassword(email, password).then(userCredential => {\n    console.log('login ->', email, password);\n    next(); // ...\n\n    return userCredential.user.uid;\n  }).catch(error => {\n    console.log('login ->', email, password);\n    console.log(error);\n    return {\n      error: error,\n      message: error.code\n    };\n  });\n  return login;\n};\nexport const doSignOut = () => {\n  try {\n    Cookies.cookies.clear();\n    auth.signOut().then(() => {\n      window.open('/login', '_self');\n    });\n  } catch (e) {}\n};\nexport const doPasswordReset = email => auth.sendPasswordResetEmail(email);\nexport const doPasswordUpdate = password => auth.currentUser.updatePassword(password);","map":{"version":3,"sources":["/Users/aaronmarsh/Documents/Clips/ReactApp/src/Components/State/firebase.js"],"names":["React","useContext","app","registerUser","appState","Cookies","useHistory","config","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","auth","fb_auth","doCreateUserWithEmailAndPassword","email","password","username","next","alert","user","createUserWithEmailAndPassword","console","log","currentUser","uid","data","doSignInWithEmailAndPassword","login","signInWithEmailAndPassword","then","userCredential","catch","error","message","code","doSignOut","cookies","clear","signOut","window","open","e","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","updatePassword"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\nimport app from \"firebase/app\";\nimport \"firebase/auth\";\nimport { registerUser } from \"../Backend/api\";\nimport { appState } from \"./Context\";\nimport Cookies from \"./cookies\";\nimport { useHistory } from \"react-router-dom\";\nconst config = {\n  apiKey: \"AIzaSyCCe3EZBhYzzDDjVhYp2DWULin4ItgIjKA\",\n  authDomain: \"clips-e8ad8.firebaseapp.com\",\n  projectId: \"clips-e8ad8\",\n  storageBucket: \"clips-e8ad8.appspot.com\",\n  messagingSenderId: \"38161657877\",\n  appId: \"1:38161657877:web:30befe0a6d2ef3e4139e1c\",\n  measurementId: \"G-P0Y59FWJ03\",\n};\n\napp.initializeApp(config);\n\nconst auth = app.auth();\nexport const fb_auth = auth;\nexport const doCreateUserWithEmailAndPassword = ({\n  email,\n  password,\n  username,\n}, next) => {\n  alert()\n  const user = auth.createUserWithEmailAndPassword(email, password);\n  console.log(auth.currentUser.uid);\n  registerUser({\n    data: { email: email, username: username, uid: auth.currentUser.uid },\n  });\n  next()\n};\n\nexport const doSignInWithEmailAndPassword = async({email, password}, next) => {\n const login = await auth.signInWithEmailAndPassword(email, password)\n  .then((userCredential) => {\nconsole.log('login ->', email, password)\n    next()\n    // ...\n    return userCredential.user.uid\n  })\n  .catch((error) => {\n    console.log('login ->', email, password)\n    console.log(error)\n    return {\n      error: error,\n      message: error.code\n    }\n  });\n  return login\n}\n \n\nexport const doSignOut = () => {\n  try {\n    Cookies.cookies.clear();\n    auth.signOut().then(() => {\n      window.open('/login', '_self')\n    });\n  } catch (e) {\n  }\n};\n\nexport const doPasswordReset = (email) => auth.sendPasswordResetEmail(email);\n\nexport const doPasswordUpdate = (password) =>\n  auth.currentUser.updatePassword(password);\n"]},"metadata":{},"sourceType":"module"}