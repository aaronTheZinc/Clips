{"ast":null,"code":"import axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport cookies from '../State/cookies';\nimport Cookies from '../State/cookies';\nconst baseUrl = 'http://localhost:5000/app';\nconst {\n  cookies: {\n    readToken,\n    create\n  }\n} = Cookies;\nexport const registerUser = async payload => {\n  const result = await axios.post(`${baseUrl}/register`, payload);\n  const {\n    data\n  } = result;\n\n  if (data.status === '200') {\n    create({\n      key: 'token',\n      value: data.token\n    });\n    const history = new useHistory();\n    history.push('/hub');\n  }\n\n  console.log('registered response =>', data);\n};","map":{"version":3,"sources":["C:/Users/aaron/Documents/Clips/Clips/reactapp/src/Components/Backend/api.js"],"names":["axios","useHistory","cookies","Cookies","baseUrl","readToken","create","registerUser","payload","result","post","data","status","key","value","token","history","push","console","log"],"mappings":"AAAA,OAAOA,KAAP,MAAmB,OAAnB;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AAEA,MAAMC,OAAO,GAAG,2BAAhB;AACA,MAAM;AAACF,EAAAA,OAAO,EAAC;AAACG,IAAAA,SAAD;AAAYC,IAAAA;AAAZ;AAAT,IAAgCH,OAAtC;AACA,OAAO,MAAMI,YAAY,GAAG,MAAMC,OAAN,IAAkB;AAC1C,QAAMC,MAAM,GAAG,MAAMT,KAAK,CAACU,IAAN,CAAY,GAAEN,OAAQ,WAAtB,EAAkCI,OAAlC,CAArB;AACC,QAAM;AAACG,IAAAA;AAAD,MAASF,MAAf;;AACG,MAAGE,IAAI,CAACC,MAAL,KAAgB,KAAnB,EAA0B;AACtBN,IAAAA,MAAM,CAAC;AAACO,MAAAA,GAAG,EAAC,OAAL;AAAcC,MAAAA,KAAK,EAAEH,IAAI,CAACI;AAA1B,KAAD,CAAN;AACA,UAAMC,OAAO,GAAG,IAAIf,UAAJ,EAAhB;AACAe,IAAAA,OAAO,CAACC,IAAR,CAAa,MAAb;AACH;;AAEDC,EAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCR,IAAtC;AACP,CAVM","sourcesContent":["import axios from  'axios'\r\nimport {useHistory} from 'react-router-dom'\r\nimport cookies from '../State/cookies'\r\nimport Cookies from '../State/cookies'\r\n\r\nconst baseUrl = 'http://localhost:5000/app'\r\nconst {cookies:{readToken, create}} = Cookies\r\nexport const registerUser = async(payload) => {\r\n    const result = await axios.post(`${baseUrl}/register`, payload);\r\n     const {data} = result;\r\n        if(data.status === '200') {\r\n            create({key:'token', value: data.token})\r\n            const history = new useHistory();\r\n            history.push('/hub')\r\n        }\r\n       \r\n        console.log('registered response =>', data)\r\n}"]},"metadata":{},"sourceType":"module"}