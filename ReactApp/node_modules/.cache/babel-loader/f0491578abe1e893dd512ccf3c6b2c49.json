{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = addDays;\n\nvar _index = _interopRequireDefault(require(\"../_lib/toInteger/index.js\"));\n\nvar _index2 = _interopRequireDefault(require(\"../toDate/index.js\"));\n\nvar _index3 = _interopRequireDefault(require(\"../_lib/requiredArgs/index.js\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\r\n * @name addDays\r\n * @category Day Helpers\r\n * @summary Add the specified number of days to the given date.\r\n *\r\n * @description\r\n * Add the specified number of days to the given date.\r\n *\r\n * ### v2.0.0 breaking changes:\r\n *\r\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\r\n *\r\n * @param {Date|Number} date - the date to be changed\r\n * @param {Number} amount - the amount of days to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\r\n * @returns {Date} the new date with the days added\r\n * @throws {TypeError} 2 arguments required\r\n *\r\n * @example\r\n * // Add 10 days to 1 September 2014:\r\n * const result = addDays(new Date(2014, 8, 1), 10)\r\n * //=> Thu Sep 11 2014 00:00:00\r\n */\n\n\nfunction addDays(dirtyDate, dirtyAmount) {\n  (0, _index3.default)(2, arguments);\n  var date = (0, _index2.default)(dirtyDate);\n  var amount = (0, _index.default)(dirtyAmount);\n\n  if (isNaN(amount)) {\n    return new Date(NaN);\n  }\n\n  if (!amount) {\n    // If 0 days, no-op to avoid changing times in the hour before end of DST\n    return date;\n  }\n\n  date.setDate(date.getDate() + amount);\n  return date;\n}\n\nmodule.exports = exports.default;","map":{"version":3,"sources":["C:/Users/aaron/Documents/Clips/Clips/Reactapp/node_modules/date-fns/addDays/index.js"],"names":["Object","defineProperty","exports","value","default","addDays","_index","_interopRequireDefault","require","_index2","_index3","obj","__esModule","dirtyDate","dirtyAmount","arguments","date","amount","isNaN","Date","NaN","setDate","getDate","module"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,OAAlB;;AAEA,IAAIC,MAAM,GAAGC,sBAAsB,CAACC,OAAO,CAAC,4BAAD,CAAR,CAAnC;;AAEA,IAAIC,OAAO,GAAGF,sBAAsB,CAACC,OAAO,CAAC,oBAAD,CAAR,CAApC;;AAEA,IAAIE,OAAO,GAAGH,sBAAsB,CAACC,OAAO,CAAC,+BAAD,CAAR,CAApC;;AAEA,SAASD,sBAAT,CAAgCI,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEP,IAAAA,OAAO,EAAEO;AAAX,GAArC;AAAwD;AAE/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASN,OAAT,CAAiBQ,SAAjB,EAA4BC,WAA5B,EAAyC;AACvC,GAAC,GAAGJ,OAAO,CAACN,OAAZ,EAAqB,CAArB,EAAwBW,SAAxB;AACA,MAAIC,IAAI,GAAG,CAAC,GAAGP,OAAO,CAACL,OAAZ,EAAqBS,SAArB,CAAX;AACA,MAAII,MAAM,GAAG,CAAC,GAAGX,MAAM,CAACF,OAAX,EAAoBU,WAApB,CAAb;;AAEA,MAAII,KAAK,CAACD,MAAD,CAAT,EAAmB;AACjB,WAAO,IAAIE,IAAJ,CAASC,GAAT,CAAP;AACD;;AAED,MAAI,CAACH,MAAL,EAAa;AACX;AACA,WAAOD,IAAP;AACD;;AAEDA,EAAAA,IAAI,CAACK,OAAL,CAAaL,IAAI,CAACM,OAAL,KAAiBL,MAA9B;AACA,SAAOD,IAAP;AACD;;AAEDO,MAAM,CAACrB,OAAP,GAAiBA,OAAO,CAACE,OAAzB","sourcesContent":["\"use strict\";\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = addDays;\r\n\r\nvar _index = _interopRequireDefault(require(\"../_lib/toInteger/index.js\"));\r\n\r\nvar _index2 = _interopRequireDefault(require(\"../toDate/index.js\"));\r\n\r\nvar _index3 = _interopRequireDefault(require(\"../_lib/requiredArgs/index.js\"));\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\r\n/**\r\n * @name addDays\r\n * @category Day Helpers\r\n * @summary Add the specified number of days to the given date.\r\n *\r\n * @description\r\n * Add the specified number of days to the given date.\r\n *\r\n * ### v2.0.0 breaking changes:\r\n *\r\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\r\n *\r\n * @param {Date|Number} date - the date to be changed\r\n * @param {Number} amount - the amount of days to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\r\n * @returns {Date} the new date with the days added\r\n * @throws {TypeError} 2 arguments required\r\n *\r\n * @example\r\n * // Add 10 days to 1 September 2014:\r\n * const result = addDays(new Date(2014, 8, 1), 10)\r\n * //=> Thu Sep 11 2014 00:00:00\r\n */\r\nfunction addDays(dirtyDate, dirtyAmount) {\r\n  (0, _index3.default)(2, arguments);\r\n  var date = (0, _index2.default)(dirtyDate);\r\n  var amount = (0, _index.default)(dirtyAmount);\r\n\r\n  if (isNaN(amount)) {\r\n    return new Date(NaN);\r\n  }\r\n\r\n  if (!amount) {\r\n    // If 0 days, no-op to avoid changing times in the hour before end of DST\r\n    return date;\r\n  }\r\n\r\n  date.setDate(date.getDate() + amount);\r\n  return date;\r\n}\r\n\r\nmodule.exports = exports.default;"]},"metadata":{},"sourceType":"script"}