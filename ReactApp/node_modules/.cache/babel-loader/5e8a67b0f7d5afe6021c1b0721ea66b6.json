{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aaron\\\\Documents\\\\Clips\\\\Clips\\\\ReactApp\\\\src\\\\Components\\\\UI\\\\Chat\\\\chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport ChatContainer from '../Bubble/index';\nimport './index.css';\nimport io from 'socket.io-client';\nconst username = \"aaronmarsh\";\nconst socket = io(\"http://localhost:5000\", {\n  transports: [\"websocket\", \"polling\"]\n});\n\nconst Chat = () => {\n  _s();\n\n  const [users, setUsers] = useState([]);\n  const [message, setMessage] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  useEffect(() => {\n    socket.on(\"connect\", message => {\n      console.log(message);\n      socket.emit(\"username\", username);\n      console.log('connected!');\n      socket.on(\"handShake\", message => {\n        console.log(message);\n        setMessage(message);\n      });\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"scroll\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, messages.map(m => {\n    return /*#__PURE__*/React.createElement(ChatContainer, {\n      text: m.text,\n      header: m.header,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 15\n      }\n    });\n  })));\n};\n\n_s(Chat, \"93w6bh+Z1aVYLQGzYipTKSuJkrw=\");\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["C:/Users/aaron/Documents/Clips/Clips/ReactApp/src/Components/UI/Chat/chat.js"],"names":["React","useEffect","useState","ChatContainer","io","username","socket","transports","Chat","users","setUsers","message","setMessage","messages","setMessages","on","console","log","emit","map","m","text","header"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAO,aAAP;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,MAAMC,QAAQ,GAAG,YAAjB;AACA,MAAMC,MAAM,GAAGF,EAAE,CAAC,uBAAD,EAA0B;AACzCG,EAAAA,UAAU,EAAE,CAAC,WAAD,EAAc,SAAd;AAD6B,CAA1B,CAAjB;;AAKA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,EAAD,CAAxC;AAGAD,EAAAA,SAAS,CAAC,MAAM;AAEdK,IAAAA,MAAM,CAACS,EAAP,CAAU,SAAV,EAAsBJ,OAAD,IAAa;AAChCK,MAAAA,OAAO,CAACC,GAAR,CAAYN,OAAZ;AACAL,MAAAA,MAAM,CAACY,IAAP,CAAY,UAAZ,EAAwBb,QAAxB;AACAW,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AAEAX,MAAAA,MAAM,CAACS,EAAP,CAAU,WAAV,EAAwBJ,OAAD,IAAa;AAClCK,QAAAA,OAAO,CAACC,GAAR,CAAYN,OAAZ;AACEC,QAAAA,UAAU,CAACD,OAAD,CAAV;AACH,OAHD;AAID,KATD;AAYD,GAdQ,EAcN,EAdM,CAAT;AAkBA,sBACE,uDACA;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEGE,QAAQ,CAACM,GAAT,CAAaC,CAAC,IAAI;AAClB,wBAAO,oBAAC,aAAD;AAAe,MAAA,IAAI,EAAEA,CAAC,CAACC,IAAvB;AAA6B,MAAA,MAAM,EAAED,CAAC,CAACE,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACC,GAFD,CAFH,CADA,CADF;AAYD,CApCD;;GAAMd,I;;KAAAA,I;AAsCN,eAAeA,IAAf","sourcesContent":["import React, {useEffect, useState} from 'react'\r\nimport ChatContainer from '../Bubble/index'\r\nimport './index.css'\r\nimport io from 'socket.io-client'\r\nconst username = \"aaronmarsh\"\r\nconst socket = io(\"http://localhost:5000\", {\r\n  transports: [\"websocket\", \"polling\"]\r\n});\r\n\r\n\r\nconst Chat = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [messages, setMessages] = useState([]);\r\n\r\n\r\n  useEffect(() => {\r\n  \r\n    socket.on(\"connect\", (message) => {\r\n      console.log(message)\r\n      socket.emit(\"username\", username);\r\n      console.log('connected!')\r\n\r\n      socket.on(\"handShake\", (message) => {\r\n        console.log(message)\r\n          setMessage(message)\r\n      })\r\n    });\r\n\r\n\r\n  }, []);\r\n\r\n \r\n  \r\n  return (\r\n    <>\r\n    <div className='scroll'>\r\n     {\r\n       messages.map(m => {\r\n       return <ChatContainer text={m.text} header={m.header} />\r\n       })\r\n     }\r\n     </div>\r\n    \r\n    </>\r\n  );\r\n}\r\n\r\nexport default Chat;\r\n"]},"metadata":{},"sourceType":"module"}