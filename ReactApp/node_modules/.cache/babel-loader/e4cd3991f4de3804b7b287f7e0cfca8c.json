{"ast":null,"code":"import { message } from 'antd';\nimport React from 'react';\nimport io from 'socket.io-client';\nconst username = \"aaronmarsh\";\nconst socket = io(\"http://localhost:5000\", {\n  transports: [\"websocket\", \"polling\"]\n});\nexport default class Chat {\n  constructor(userId) {\n    this.users = () => {\n      socket.on(\"users\", users => {});\n    };\n\n    this.messages = async () => {\n      const result = new Promise(resolve => {\n        socket.on(\"message\", message => {\n          resolve(message);\n        });\n      });\n      const messages = result.then(m => {\n        console.log('mess->', m);\n        return m;\n      });\n      return await messages;\n    };\n\n    this.send = (message, sender) => {\n      socket.emit(\"send\", {\n        text: message,\n        sender: 'aaronmarsh'\n      });\n    };\n\n    this.username = userId;\n    socket.on(\"connect\", () => {\n      socket.emit(\"username\", username);\n      console.log('connected!');\n    });\n  }\n\n}","map":{"version":3,"sources":["C:/Users/aaron/Documents/Clips/Clips/ReactApp/src/Components/UI/Chat/chatHandler.js"],"names":["message","React","io","username","socket","transports","Chat","constructor","userId","users","on","messages","result","Promise","resolve","then","m","console","log","send","sender","emit","text"],"mappings":"AACA,SAASA,OAAT,QAAwB,MAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,MAAMC,QAAQ,GAAG,YAAjB;AACA,MAAMC,MAAM,GAAGF,EAAE,CAAC,uBAAD,EAA0B;AACzCG,EAAAA,UAAU,EAAE,CAAC,WAAD,EAAc,SAAd;AAD6B,CAA1B,CAAjB;AAIA,eAAe,MAAMC,IAAN,CAAW;AAExBC,EAAAA,WAAW,CAACC,MAAD,EAAS;AAAA,SASlBC,KATkB,GASV,MAAM;AACdL,MAAAA,MAAM,CAACM,EAAP,CAAU,OAAV,EAAmBD,KAAK,IAAI,CAE3B,CAFD;AAGD,KAbmB;;AAAA,SAclBE,QAdkB,GAcP,YAAW;AACpB,YAAMC,MAAM,GAAG,IAAIC,OAAJ,CAAaC,OAAD,IAAa;AACtCV,QAAAA,MAAM,CAACM,EAAP,CAAU,SAAV,EAAqBV,OAAO,IAAI;AAC9Bc,UAAAA,OAAO,CAACd,OAAD,CAAP;AACD,SAFD;AAGD,OAJc,CAAf;AAMA,YAAMW,QAAQ,GAAGC,MAAM,CAACG,IAAP,CAAYC,CAAC,IAAG;AAC/BC,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,CAAtB;AACA,eAAOA,CAAP;AACD,OAHgB,CAAjB;AAKE,aAAO,MAAML,QAAb;AAEL,KA5BmB;;AAAA,SA6BpBQ,IA7BoB,GA6Bb,CAACnB,OAAD,EAAUoB,MAAV,KAAqB;AAC1BhB,MAAAA,MAAM,CAACiB,IAAP,CAAY,MAAZ,EAAoB;AAACC,QAAAA,IAAI,EAACtB,OAAN;AAAeoB,QAAAA,MAAM,EAAE;AAAvB,OAApB;AACD,KA/BmB;;AAClB,SAAKjB,QAAL,GAAgBK,MAAhB;AAEAJ,IAAAA,MAAM,CAACM,EAAP,CAAU,SAAV,EAAqB,MAAM;AACzBN,MAAAA,MAAM,CAACiB,IAAP,CAAY,UAAZ,EAAwBlB,QAAxB;AACAc,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACD,KAHD;AAKC;;AAVqB","sourcesContent":["\r\nimport { message } from 'antd';\r\nimport React from 'react'\r\nimport io from 'socket.io-client'\r\nconst username = \"aaronmarsh\"\r\nconst socket = io(\"http://localhost:5000\", {\r\n  transports: [\"websocket\", \"polling\"]\r\n});\r\n\r\nexport default class Chat {\r\n\r\n  constructor(userId) {\r\n    this.username = userId\r\n\r\n    socket.on(\"connect\", () => {\r\n      socket.emit(\"username\", username);\r\n      console.log('connected!')\r\n    });\r\n\r\n    }\r\n    users = () => {\r\n    socket.on(\"users\", users => {\r\n\r\n    });\r\n  }\r\n    messages = async() => {\r\n      const result = new Promise((resolve) => {\r\n        socket.on(\"message\", message => {\r\n          resolve(message)\r\n        })\r\n      })\r\n\r\n      const messages = result.then(m =>{\r\n        console.log('mess->', m)\r\n        return m\r\n      } )\r\n\r\n        return await messages\r\n\r\n  }\r\n  send = (message, sender) => {\r\n    socket.emit(\"send\", {text:message, sender: 'aaronmarsh'});\r\n  }\r\n}\r\n\r\n\r\n  \r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}