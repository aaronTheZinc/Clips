{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isSameYear;\n\nvar _index = _interopRequireDefault(require(\"../toDate/index.js\"));\n\nvar _index2 = _interopRequireDefault(require(\"../_lib/requiredArgs/index.js\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\r\n * @name isSameYear\r\n * @category Year Helpers\r\n * @summary Are the given dates in the same year?\r\n *\r\n * @description\r\n * Are the given dates in the same year?\r\n *\r\n * ### v2.0.0 breaking changes:\r\n *\r\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\r\n *\r\n * @param {Date|Number} dateLeft - the first date to check\r\n * @param {Date|Number} dateRight - the second date to check\r\n * @returns {Boolean} the dates are in the same year\r\n * @throws {TypeError} 2 arguments required\r\n *\r\n * @example\r\n * // Are 2 September 2014 and 25 September 2014 in the same year?\r\n * var result = isSameYear(new Date(2014, 8, 2), new Date(2014, 8, 25))\r\n * //=> true\r\n */\n\n\nfunction isSameYear(dirtyDateLeft, dirtyDateRight) {\n  (0, _index2.default)(2, arguments);\n  var dateLeft = (0, _index.default)(dirtyDateLeft);\n  var dateRight = (0, _index.default)(dirtyDateRight);\n  return dateLeft.getFullYear() === dateRight.getFullYear();\n}\n\nmodule.exports = exports.default;","map":{"version":3,"sources":["C:/Users/aaron/Documents/Clips/Clips/Reactapp/node_modules/date-fns/isSameYear/index.js"],"names":["Object","defineProperty","exports","value","default","isSameYear","_index","_interopRequireDefault","require","_index2","obj","__esModule","dirtyDateLeft","dirtyDateRight","arguments","dateLeft","dateRight","getFullYear","module"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,UAAlB;;AAEA,IAAIC,MAAM,GAAGC,sBAAsB,CAACC,OAAO,CAAC,oBAAD,CAAR,CAAnC;;AAEA,IAAIC,OAAO,GAAGF,sBAAsB,CAACC,OAAO,CAAC,+BAAD,CAAR,CAApC;;AAEA,SAASD,sBAAT,CAAgCG,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEN,IAAAA,OAAO,EAAEM;AAAX,GAArC;AAAwD;AAE/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASL,UAAT,CAAoBO,aAApB,EAAmCC,cAAnC,EAAmD;AACjD,GAAC,GAAGJ,OAAO,CAACL,OAAZ,EAAqB,CAArB,EAAwBU,SAAxB;AACA,MAAIC,QAAQ,GAAG,CAAC,GAAGT,MAAM,CAACF,OAAX,EAAoBQ,aAApB,CAAf;AACA,MAAII,SAAS,GAAG,CAAC,GAAGV,MAAM,CAACF,OAAX,EAAoBS,cAApB,CAAhB;AACA,SAAOE,QAAQ,CAACE,WAAT,OAA2BD,SAAS,CAACC,WAAV,EAAlC;AACD;;AAEDC,MAAM,CAAChB,OAAP,GAAiBA,OAAO,CAACE,OAAzB","sourcesContent":["\"use strict\";\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = isSameYear;\r\n\r\nvar _index = _interopRequireDefault(require(\"../toDate/index.js\"));\r\n\r\nvar _index2 = _interopRequireDefault(require(\"../_lib/requiredArgs/index.js\"));\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\r\n/**\r\n * @name isSameYear\r\n * @category Year Helpers\r\n * @summary Are the given dates in the same year?\r\n *\r\n * @description\r\n * Are the given dates in the same year?\r\n *\r\n * ### v2.0.0 breaking changes:\r\n *\r\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\r\n *\r\n * @param {Date|Number} dateLeft - the first date to check\r\n * @param {Date|Number} dateRight - the second date to check\r\n * @returns {Boolean} the dates are in the same year\r\n * @throws {TypeError} 2 arguments required\r\n *\r\n * @example\r\n * // Are 2 September 2014 and 25 September 2014 in the same year?\r\n * var result = isSameYear(new Date(2014, 8, 2), new Date(2014, 8, 25))\r\n * //=> true\r\n */\r\nfunction isSameYear(dirtyDateLeft, dirtyDateRight) {\r\n  (0, _index2.default)(2, arguments);\r\n  var dateLeft = (0, _index.default)(dirtyDateLeft);\r\n  var dateRight = (0, _index.default)(dirtyDateRight);\r\n  return dateLeft.getFullYear() === dateRight.getFullYear();\r\n}\r\n\r\nmodule.exports = exports.default;"]},"metadata":{},"sourceType":"script"}