{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useContext, useEffect } from \"react\";\nimport { SocketContext } from '../State/Context';\n\nconst io = require(\"socket.io-client\");\n\nconst ENDPOINT = \"http://localhost:5000\";\nconst socket = io(ENDPOINT);\n\nconst Socket = ({\n  children\n}) => {\n  _s();\n\n  const Provider = useContext(SocketContext);\n  useEffect(() => {\n    io.emit(\"handShake\", {\n      username: \"aaron\"\n    });\n    socket.on('handShake', () => {\n      Provider.setToken('token');\n      console.log('completed handShake!');\n    });\n  });\n};\n\n_s(Socket, \"b6GECGK41pKGwa0RhjYJX5vhbCw=\");\n\n_c = Socket;\n\nvar _c;\n\n$RefreshReg$(_c, \"Socket\");","map":{"version":3,"sources":["C:/Users/aaron/Documents/Clips/Clips/ReactApp/src/Components/Backend/Backend.js"],"names":["React","useContext","useEffect","SocketContext","io","require","ENDPOINT","socket","Socket","children","Provider","emit","username","on","setToken","console","log"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,SAA3B,QAA2C,OAA3C;AACA,SAAQC,aAAR,QAA4B,kBAA5B;;AACA,MAAMC,EAAE,GAAGC,OAAO,CAAC,kBAAD,CAAlB;;AACA,MAAMC,QAAQ,GAAG,uBAAjB;AACA,MAAMC,MAAM,GAAGH,EAAE,CAACE,QAAD,CAAjB;;AAEA,MAAME,MAAM,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AAAA;;AAC3B,QAAMC,QAAQ,GAAGT,UAAU,CAACE,aAAD,CAA3B;AAEAD,EAAAA,SAAS,CAAC,MAAK;AACXE,IAAAA,EAAE,CAACO,IAAH,CAAQ,WAAR,EAAqB;AAACC,MAAAA,QAAQ,EAAE;AAAX,KAArB;AACAL,IAAAA,MAAM,CAACM,EAAP,CAAU,WAAV,EAAuB,MAAK;AACxBH,MAAAA,QAAQ,CAACI,QAAT,CAAkB,OAAlB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACH,KAHD;AAIH,GANQ,CAAT;AAQH,CAXD;;GAAMR,M;;KAAAA,M","sourcesContent":["import React, {useContext, useEffect} from \"react\";\r\nimport {SocketContext} from '../State/Context'\r\nconst io = require(\"socket.io-client\");\r\nconst ENDPOINT = \"http://localhost:5000\";\r\nconst socket = io(ENDPOINT);\r\n\r\nconst Socket = ({children}) => {\r\n    const Provider = useContext(SocketContext)\r\n\r\n    useEffect(() =>{\r\n        io.emit(\"handShake\", {username: \"aaron\"})\r\n        socket.on('handShake', ()=> {\r\n            Provider.setToken('token')\r\n            console.log('completed handShake!')\r\n        } )\r\n    })\r\n    \r\n}\r\n"]},"metadata":{},"sourceType":"module"}