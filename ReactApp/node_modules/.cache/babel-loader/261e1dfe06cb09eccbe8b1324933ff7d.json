{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React, { forwardRef, useEffect, useMemo, useRef, useState } from 'react';\nimport { FormContext } from './FormContext';\nvar defaultMessages = {\n  invalid: 'invalid',\n  required: 'required'\n};\nvar defaultValue = {};\nvar defaultTouched = {};\nvar defaultValidationResults = {\n  errors: {},\n  infos: {}\n}; // validations is an array from Object.entries()\n\nvar validate = function validate(validations, value, omitValid) {\n  var nextErrors = {};\n  var nextInfos = {};\n  validations.forEach(function (_ref) {\n    var name = _ref[0],\n        validation = _ref[1];\n\n    if (!omitValid) {\n      nextErrors[name] = undefined;\n      nextInfos[name] = undefined;\n    }\n\n    var result = validation(value[name], value); // typeof error === 'object' is implied for both cases of error with\n    // a status message and for an error object that is a react node\n\n    if (typeof result === 'object') {\n      if (result.status === 'info') {\n        nextInfos[name] = result.message;\n      } else {\n        nextErrors[name] = result.message || result; // could be a node\n      }\n    } else if (typeof result === 'string') {\n      nextErrors[name] = result;\n    }\n  });\n  return [nextErrors, nextInfos];\n};\n\nvar Form = /*#__PURE__*/forwardRef(function (_ref2, ref) {\n  var children = _ref2.children,\n      _ref2$errors = _ref2.errors,\n      errorsProp = _ref2$errors === void 0 ? defaultValidationResults.errors : _ref2$errors,\n      _ref2$infos = _ref2.infos,\n      infosProp = _ref2$infos === void 0 ? defaultValidationResults.infos : _ref2$infos,\n      _ref2$messages = _ref2.messages,\n      messages = _ref2$messages === void 0 ? defaultMessages : _ref2$messages,\n      onChange = _ref2.onChange,\n      _onReset = _ref2.onReset,\n      _onSubmit = _ref2.onSubmit,\n      onValidate = _ref2.onValidate,\n      _ref2$validate = _ref2.validate,\n      validateOn = _ref2$validate === void 0 ? 'submit' : _ref2$validate,\n      valueProp = _ref2.value,\n      rest = _objectWithoutPropertiesLoose(_ref2, [\"children\", \"errors\", \"infos\", \"messages\", \"onChange\", \"onReset\", \"onSubmit\", \"onValidate\", \"validate\", \"value\"]);\n\n  var _useState = useState(valueProp || defaultValue),\n      valueState = _useState[0],\n      setValueState = _useState[1];\n\n  var value = useMemo(function () {\n    return valueProp || valueState;\n  }, [valueProp, valueState]);\n\n  var _useState2 = useState(defaultTouched),\n      touched = _useState2[0],\n      setTouched = _useState2[1];\n\n  var _useState3 = useState(defaultValidationResults),\n      validationResults = _useState3[0],\n      setValidationResults = _useState3[1];\n\n  var _useState4 = useState([]),\n      requiredFields = _useState4[0],\n      setRequiredFields = _useState4[1]; // when onBlur input validation is triggered, we need to complete any\n  // potential click events before running the onBlur validation.\n  // otherwise, click events like reset, etc. may not be registered.\n  // for a detailed scenario/discussion,\n  // see: https://github.com/grommet/grommet/issues/4863\n  // the value of pendingValidation is the name of the FormField\n  // awaiting validation.\n\n\n  var _useState5 = useState(undefined),\n      pendingValidation = _useState5[0],\n      setPendingValidation = _useState5[1];\n\n  useEffect(function () {\n    setPendingValidation(undefined);\n    setValidationResults({\n      errors: errorsProp,\n      infos: infosProp\n    });\n  }, [errorsProp, infosProp]);\n  var validations = useRef({}); // Currently, onBlur validation will trigger after a timeout of 120ms.\n\n  useEffect(function () {\n    var timer = setTimeout(function () {\n      if (pendingValidation) {\n        // run validations on the pending one and any other touched fields\n        var _validate = validate(Object.entries(validations.current).filter(function (_ref3) {\n          var n = _ref3[0];\n          return touched[n] || pendingValidation.includes(n);\n        }), value),\n            validatedErrors = _validate[0],\n            validatedInfos = _validate[1];\n\n        setPendingValidation(undefined);\n        setValidationResults(function (prevValidationResults) {\n          var nextErrors = _extends({}, prevValidationResults.errors, validatedErrors);\n\n          var nextInfos = _extends({}, prevValidationResults.infos, validatedInfos); // Remove any errors or infos that we don't have any validations\n          // for anymore. This can occur when fields are dynamically removed.\n\n\n          Object.keys(nextErrors).filter(function (n) {\n            return !validations.current[n] || nextErrors[n] === undefined;\n          }).map(function (n) {\n            return delete nextErrors[n];\n          });\n          Object.keys(nextInfos).filter(function (n) {\n            return !validations.current[n] || nextInfos[n] === undefined;\n          }).map(function (n) {\n            return delete nextInfos[n];\n          });\n          var valid = false;\n          valid = requiredFields.filter(function (n) {\n            return Object.keys(validations.current).includes(n);\n          }).every(function (field) {\n            return value[field] && (value[field] !== '' || value[field] !== false);\n          });\n          if (Object.keys(nextErrors).length > 0) valid = false; // keep any previous errors and infos for untouched keys,\n          // these may have come from a submit\n\n          var nextValidationResults = {\n            errors: nextErrors,\n            infos: nextInfos,\n            valid: valid\n          };\n          if (onValidate) onValidate(nextValidationResults);\n          return nextValidationResults;\n        });\n      } // a timeout is needed to ensure that a click event (like one on a reset\n      // button) completes prior to running the validation. without a timeout,\n      // the blur will always complete and trigger a validation prematurely\n      // The following values have been empirically tested, but 120 was\n      // selected because it is the largest value\n      // Chrome: 100, Safari: 120, Firefox: 80\n\n    }, 120);\n    return function () {\n      return clearTimeout(timer);\n    };\n  }, [pendingValidation, onValidate, touched, value, requiredFields]); // clear any errors when value changes\n\n  useEffect(function () {\n    if (validateOn !== 'change') setPendingValidation(undefined);\n    setValidationResults(function (prevValidationResults) {\n      var _validate2 = validate(Object.entries(validations.current).filter(function (_ref4) {\n        var n = _ref4[0];\n        return prevValidationResults.errors[n] || prevValidationResults.infos[n];\n      }), value),\n          nextErrors = _validate2[0],\n          nextInfos = _validate2[1];\n\n      return {\n        errors: _extends({}, prevValidationResults.errors, nextErrors),\n        infos: _extends({}, prevValidationResults.infos, nextInfos)\n      };\n    });\n  }, [touched, validateOn, value]); // There are three basic patterns of handling form input value state:\n  //\n  // 1 - form controlled\n  //\n  // In this model, the caller sets `value` and `onChange` properties\n  // on the Form component to supply the values used by the input fields.\n  // In useFormContext(), componentValue would be undefined and formValue\n  // is be set to whatever the form state has. Whenever the form state\n  // changes, we update the contextValue so the input component will use\n  // that. When the input component changes, we will call update() to\n  // update the form state.\n  //\n  // 2 - input controlled\n  //\n  // In this model, the caller sets `value` and `onChange` properties\n  // on the input components, like TextInput, to supply the value for it.\n  // In useFormContext(), componentValue is this value and we ensure to\n  // update the form state, via update(), and set the contextValue from\n  // the componentValue. When the input component changes, we will\n  // call update() to update the form state.\n  //\n  // 3 - uncontrolled\n  //\n  // In this model, the caller doesn't set a `value` or `onChange` property\n  // at either the form or input component levels.\n  // In useFormContext(), componentValue is undefined and valueProp is\n  // undefined and nothing much happens here. That is, unless the\n  // calling component needs to know the state in order to work, such\n  // as CheckBox or Select. In this case, those components supply\n  // an initialValue, which will trigger updating the contextValue so\n  // they can have access to it.\n  //\n\n  var useFormInput = function useFormInput(name, componentValue, initialValue) {\n    var _useState6 = useState(initialValue),\n        inputValue = _useState6[0],\n        setInputValue = _useState6[1];\n\n    var formValue = name ? value[name] : undefined; // This effect is for pattern #2, where the controlled input\n    // component is driving the value via componentValue.\n\n    useEffect(function () {\n      if (name && // we have somewhere to put this\n      componentValue !== undefined && // input driving\n      componentValue !== formValue // don't already have it\n      ) {\n          setValueState(function (prevValue) {\n            var nextValue = _extends({}, prevValue);\n\n            nextValue[name] = componentValue;\n            return nextValue;\n          }); // don't onChange on programmatic changes\n        }\n    }, [componentValue, formValue, name]);\n    var useValue;\n    if (componentValue !== undefined) // input component drives, pattern #2\n      useValue = componentValue;else if (valueProp && name && formValue !== undefined) // form drives, pattern #1\n      useValue = formValue;else if (formValue === undefined && name) // form has reset, so reset input value as well\n      useValue = initialValue;else useValue = inputValue;\n    return [useValue, function (nextComponentValue) {\n      if (name) {\n        // we have somewhere to put this\n        var nextTouched = _extends({}, touched);\n\n        nextTouched[name] = true;\n\n        if (!touched[name]) {\n          // don't update if not needed\n          setTouched(nextTouched);\n        }\n\n        var nextValue = _extends({}, value);\n\n        nextValue[name] = nextComponentValue;\n        setValueState(nextValue);\n        if (onChange) onChange(nextValue, {\n          touched: nextTouched\n        });\n      }\n\n      if (initialValue !== undefined) setInputValue(nextComponentValue);\n    }];\n  };\n\n  var useFormField = function useFormField(_ref5) {\n    var errorArg = _ref5.error,\n        infoArg = _ref5.info,\n        name = _ref5.name,\n        required = _ref5.required,\n        validateArg = _ref5.validate;\n    var error = errorArg || validationResults.errors[name];\n    var info = infoArg || validationResults.infos[name];\n    useEffect(function () {\n      var validateSingle = function validateSingle(aValidate, value2, data) {\n        var result;\n\n        if (typeof aValidate === 'function') {\n          result = aValidate(value2, data);\n        } else if (aValidate.regexp) {\n          if (!aValidate.regexp.test(value2)) {\n            result = aValidate.message || messages.invalid;\n\n            if (aValidate.status) {\n              result = {\n                message: result,\n                status: aValidate.status\n              };\n            }\n          }\n        }\n\n        return result;\n      };\n\n      var validateField = function validateField(value2, data) {\n        var result;\n\n        if (required && ( // false is for CheckBox\n        value2 === undefined || value2 === '' || value2 === false)) {\n          result = messages.required;\n        } else if (validateArg) {\n          if (Array.isArray(validateArg)) {\n            validateArg.some(function (aValidate) {\n              result = validateSingle(aValidate, value2, data);\n              return !!result;\n            });\n          } else {\n            result = validateSingle(validateArg, value2, data);\n          }\n        }\n\n        return result;\n      };\n\n      if (required) {\n        setRequiredFields(function (prevValue) {\n          return !prevValue.includes(name) ? [].concat(prevValue, [name]) : prevValue;\n        });\n      } else {\n        setRequiredFields(function (prevValue) {\n          return prevValue.filter(function (v) {\n            return v !== name;\n          });\n        });\n      }\n\n      if (validateArg || required) {\n        validations.current[name] = validateField;\n        return function () {\n          return delete validations.current[name];\n        };\n      }\n\n      return undefined;\n    }, [error, name, required, validateArg]);\n    return {\n      error: error,\n      info: info,\n      inForm: true,\n      onBlur: validateOn === 'blur' ? function () {\n        return setPendingValidation(pendingValidation ? [].concat(pendingValidation, [name]) : [name]);\n      } : undefined,\n      onChange: validateOn === 'change' ? function () {\n        return setPendingValidation(pendingValidation ? [].concat(pendingValidation, [name]) : [name]);\n      } : undefined\n    };\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", _extends({\n    ref: ref\n  }, rest, {\n    onReset: function onReset(event) {\n      setPendingValidation(undefined);\n\n      if (!valueProp) {\n        setValueState(defaultValue);\n        if (onChange) onChange(defaultValue, {\n          touched: defaultTouched\n        });\n      }\n\n      setTouched(defaultTouched);\n      setValidationResults(defaultValidationResults);\n\n      if (_onReset) {\n        event.persist(); // extract from React's synthetic event pool\n\n        var adjustedEvent = event;\n        adjustedEvent.value = defaultValue;\n\n        _onReset(adjustedEvent);\n      }\n    },\n    onSubmit: function onSubmit(event) {\n      // Don't submit the form via browser form action. We don't want it\n      // if the validation fails. And, we assume a javascript action handler\n      // otherwise.\n      event.preventDefault();\n      setPendingValidation(undefined);\n\n      var _validate3 = validate(Object.entries(validations.current), value, true),\n          nextErrors = _validate3[0],\n          nextInfos = _validate3[1];\n\n      setValidationResults(function () {\n        var nextValidationResults = {\n          errors: nextErrors,\n          infos: nextInfos\n        };\n        if (onValidate) onValidate(nextValidationResults);\n        return nextValidationResults;\n      });\n\n      if (Object.keys(nextErrors).length === 0 && _onSubmit) {\n        event.persist(); // extract from React's synthetic event pool\n\n        var adjustedEvent = event;\n        adjustedEvent.value = value;\n        adjustedEvent.touched = touched;\n\n        _onSubmit(adjustedEvent);\n      }\n    }\n  }), /*#__PURE__*/React.createElement(FormContext.Provider, {\n    value: {\n      useFormField: useFormField,\n      useFormInput: useFormInput\n    }\n  }, children));\n});\nForm.displayName = 'Form';\nvar FormDoc;\n\nif (process.env.NODE_ENV !== 'production') {\n  FormDoc = require('./doc').doc(Form); // eslint-disable-line global-require\n}\n\nvar FormWrapper = FormDoc || Form;\nexport { FormWrapper as Form };","map":{"version":3,"sources":["C:/Users/aaron/Documents/Clips/Clips/Reactapp/node_modules/grommet/es6/components/Form/Form.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","React","forwardRef","useEffect","useMemo","useRef","useState","FormContext","defaultMessages","invalid","required","defaultValue","defaultTouched","defaultValidationResults","errors","infos","validate","validations","value","omitValid","nextErrors","nextInfos","forEach","_ref","name","validation","undefined","result","status","message","Form","_ref2","ref","children","_ref2$errors","errorsProp","_ref2$infos","infosProp","_ref2$messages","messages","onChange","_onReset","onReset","_onSubmit","onSubmit","onValidate","_ref2$validate","validateOn","valueProp","rest","_useState","valueState","setValueState","_useState2","touched","setTouched","_useState3","validationResults","setValidationResults","_useState4","requiredFields","setRequiredFields","_useState5","pendingValidation","setPendingValidation","timer","setTimeout","_validate","entries","current","filter","_ref3","n","includes","validatedErrors","validatedInfos","prevValidationResults","map","valid","every","field","nextValidationResults","clearTimeout","_validate2","_ref4","useFormInput","componentValue","initialValue","_useState6","inputValue","setInputValue","formValue","prevValue","nextValue","useValue","nextComponentValue","nextTouched","useFormField","_ref5","errorArg","error","infoArg","info","validateArg","validateSingle","aValidate","value2","data","regexp","test","validateField","Array","isArray","some","concat","v","inForm","onBlur","createElement","event","persist","adjustedEvent","preventDefault","_validate3","Provider","displayName","FormDoc","process","env","NODE_ENV","require","doc","FormWrapper"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef, useEffect, useMemo, useRef, useState } from 'react';\nimport { FormContext } from './FormContext';\nvar defaultMessages = {\n  invalid: 'invalid',\n  required: 'required'\n};\nvar defaultValue = {};\nvar defaultTouched = {};\nvar defaultValidationResults = {\n  errors: {},\n  infos: {}\n}; // validations is an array from Object.entries()\n\nvar validate = function validate(validations, value, omitValid) {\n  var nextErrors = {};\n  var nextInfos = {};\n  validations.forEach(function (_ref) {\n    var name = _ref[0],\n        validation = _ref[1];\n\n    if (!omitValid) {\n      nextErrors[name] = undefined;\n      nextInfos[name] = undefined;\n    }\n\n    var result = validation(value[name], value); // typeof error === 'object' is implied for both cases of error with\n    // a status message and for an error object that is a react node\n\n    if (typeof result === 'object') {\n      if (result.status === 'info') {\n        nextInfos[name] = result.message;\n      } else {\n        nextErrors[name] = result.message || result; // could be a node\n      }\n    } else if (typeof result === 'string') {\n      nextErrors[name] = result;\n    }\n  });\n  return [nextErrors, nextInfos];\n};\n\nvar Form = /*#__PURE__*/forwardRef(function (_ref2, ref) {\n  var children = _ref2.children,\n      _ref2$errors = _ref2.errors,\n      errorsProp = _ref2$errors === void 0 ? defaultValidationResults.errors : _ref2$errors,\n      _ref2$infos = _ref2.infos,\n      infosProp = _ref2$infos === void 0 ? defaultValidationResults.infos : _ref2$infos,\n      _ref2$messages = _ref2.messages,\n      messages = _ref2$messages === void 0 ? defaultMessages : _ref2$messages,\n      onChange = _ref2.onChange,\n      _onReset = _ref2.onReset,\n      _onSubmit = _ref2.onSubmit,\n      onValidate = _ref2.onValidate,\n      _ref2$validate = _ref2.validate,\n      validateOn = _ref2$validate === void 0 ? 'submit' : _ref2$validate,\n      valueProp = _ref2.value,\n      rest = _objectWithoutPropertiesLoose(_ref2, [\"children\", \"errors\", \"infos\", \"messages\", \"onChange\", \"onReset\", \"onSubmit\", \"onValidate\", \"validate\", \"value\"]);\n\n  var _useState = useState(valueProp || defaultValue),\n      valueState = _useState[0],\n      setValueState = _useState[1];\n\n  var value = useMemo(function () {\n    return valueProp || valueState;\n  }, [valueProp, valueState]);\n\n  var _useState2 = useState(defaultTouched),\n      touched = _useState2[0],\n      setTouched = _useState2[1];\n\n  var _useState3 = useState(defaultValidationResults),\n      validationResults = _useState3[0],\n      setValidationResults = _useState3[1];\n\n  var _useState4 = useState([]),\n      requiredFields = _useState4[0],\n      setRequiredFields = _useState4[1]; // when onBlur input validation is triggered, we need to complete any\n  // potential click events before running the onBlur validation.\n  // otherwise, click events like reset, etc. may not be registered.\n  // for a detailed scenario/discussion,\n  // see: https://github.com/grommet/grommet/issues/4863\n  // the value of pendingValidation is the name of the FormField\n  // awaiting validation.\n\n\n  var _useState5 = useState(undefined),\n      pendingValidation = _useState5[0],\n      setPendingValidation = _useState5[1];\n\n  useEffect(function () {\n    setPendingValidation(undefined);\n    setValidationResults({\n      errors: errorsProp,\n      infos: infosProp\n    });\n  }, [errorsProp, infosProp]);\n  var validations = useRef({}); // Currently, onBlur validation will trigger after a timeout of 120ms.\n\n  useEffect(function () {\n    var timer = setTimeout(function () {\n      if (pendingValidation) {\n        // run validations on the pending one and any other touched fields\n        var _validate = validate(Object.entries(validations.current).filter(function (_ref3) {\n          var n = _ref3[0];\n          return touched[n] || pendingValidation.includes(n);\n        }), value),\n            validatedErrors = _validate[0],\n            validatedInfos = _validate[1];\n\n        setPendingValidation(undefined);\n        setValidationResults(function (prevValidationResults) {\n          var nextErrors = _extends({}, prevValidationResults.errors, validatedErrors);\n\n          var nextInfos = _extends({}, prevValidationResults.infos, validatedInfos); // Remove any errors or infos that we don't have any validations\n          // for anymore. This can occur when fields are dynamically removed.\n\n\n          Object.keys(nextErrors).filter(function (n) {\n            return !validations.current[n] || nextErrors[n] === undefined;\n          }).map(function (n) {\n            return delete nextErrors[n];\n          });\n          Object.keys(nextInfos).filter(function (n) {\n            return !validations.current[n] || nextInfos[n] === undefined;\n          }).map(function (n) {\n            return delete nextInfos[n];\n          });\n          var valid = false;\n          valid = requiredFields.filter(function (n) {\n            return Object.keys(validations.current).includes(n);\n          }).every(function (field) {\n            return value[field] && (value[field] !== '' || value[field] !== false);\n          });\n          if (Object.keys(nextErrors).length > 0) valid = false; // keep any previous errors and infos for untouched keys,\n          // these may have come from a submit\n\n          var nextValidationResults = {\n            errors: nextErrors,\n            infos: nextInfos,\n            valid: valid\n          };\n          if (onValidate) onValidate(nextValidationResults);\n          return nextValidationResults;\n        });\n      } // a timeout is needed to ensure that a click event (like one on a reset\n      // button) completes prior to running the validation. without a timeout,\n      // the blur will always complete and trigger a validation prematurely\n      // The following values have been empirically tested, but 120 was\n      // selected because it is the largest value\n      // Chrome: 100, Safari: 120, Firefox: 80\n\n    }, 120);\n    return function () {\n      return clearTimeout(timer);\n    };\n  }, [pendingValidation, onValidate, touched, value, requiredFields]); // clear any errors when value changes\n\n  useEffect(function () {\n    if (validateOn !== 'change') setPendingValidation(undefined);\n    setValidationResults(function (prevValidationResults) {\n      var _validate2 = validate(Object.entries(validations.current).filter(function (_ref4) {\n        var n = _ref4[0];\n        return prevValidationResults.errors[n] || prevValidationResults.infos[n];\n      }), value),\n          nextErrors = _validate2[0],\n          nextInfos = _validate2[1];\n\n      return {\n        errors: _extends({}, prevValidationResults.errors, nextErrors),\n        infos: _extends({}, prevValidationResults.infos, nextInfos)\n      };\n    });\n  }, [touched, validateOn, value]); // There are three basic patterns of handling form input value state:\n  //\n  // 1 - form controlled\n  //\n  // In this model, the caller sets `value` and `onChange` properties\n  // on the Form component to supply the values used by the input fields.\n  // In useFormContext(), componentValue would be undefined and formValue\n  // is be set to whatever the form state has. Whenever the form state\n  // changes, we update the contextValue so the input component will use\n  // that. When the input component changes, we will call update() to\n  // update the form state.\n  //\n  // 2 - input controlled\n  //\n  // In this model, the caller sets `value` and `onChange` properties\n  // on the input components, like TextInput, to supply the value for it.\n  // In useFormContext(), componentValue is this value and we ensure to\n  // update the form state, via update(), and set the contextValue from\n  // the componentValue. When the input component changes, we will\n  // call update() to update the form state.\n  //\n  // 3 - uncontrolled\n  //\n  // In this model, the caller doesn't set a `value` or `onChange` property\n  // at either the form or input component levels.\n  // In useFormContext(), componentValue is undefined and valueProp is\n  // undefined and nothing much happens here. That is, unless the\n  // calling component needs to know the state in order to work, such\n  // as CheckBox or Select. In this case, those components supply\n  // an initialValue, which will trigger updating the contextValue so\n  // they can have access to it.\n  //\n\n  var useFormInput = function useFormInput(name, componentValue, initialValue) {\n    var _useState6 = useState(initialValue),\n        inputValue = _useState6[0],\n        setInputValue = _useState6[1];\n\n    var formValue = name ? value[name] : undefined; // This effect is for pattern #2, where the controlled input\n    // component is driving the value via componentValue.\n\n    useEffect(function () {\n      if (name && // we have somewhere to put this\n      componentValue !== undefined && // input driving\n      componentValue !== formValue // don't already have it\n      ) {\n          setValueState(function (prevValue) {\n            var nextValue = _extends({}, prevValue);\n\n            nextValue[name] = componentValue;\n            return nextValue;\n          }); // don't onChange on programmatic changes\n        }\n    }, [componentValue, formValue, name]);\n    var useValue;\n    if (componentValue !== undefined) // input component drives, pattern #2\n      useValue = componentValue;else if (valueProp && name && formValue !== undefined) // form drives, pattern #1\n      useValue = formValue;else if (formValue === undefined && name) // form has reset, so reset input value as well\n      useValue = initialValue;else useValue = inputValue;\n    return [useValue, function (nextComponentValue) {\n      if (name) {\n        // we have somewhere to put this\n        var nextTouched = _extends({}, touched);\n\n        nextTouched[name] = true;\n\n        if (!touched[name]) {\n          // don't update if not needed\n          setTouched(nextTouched);\n        }\n\n        var nextValue = _extends({}, value);\n\n        nextValue[name] = nextComponentValue;\n        setValueState(nextValue);\n        if (onChange) onChange(nextValue, {\n          touched: nextTouched\n        });\n      }\n\n      if (initialValue !== undefined) setInputValue(nextComponentValue);\n    }];\n  };\n\n  var useFormField = function useFormField(_ref5) {\n    var errorArg = _ref5.error,\n        infoArg = _ref5.info,\n        name = _ref5.name,\n        required = _ref5.required,\n        validateArg = _ref5.validate;\n    var error = errorArg || validationResults.errors[name];\n    var info = infoArg || validationResults.infos[name];\n    useEffect(function () {\n      var validateSingle = function validateSingle(aValidate, value2, data) {\n        var result;\n\n        if (typeof aValidate === 'function') {\n          result = aValidate(value2, data);\n        } else if (aValidate.regexp) {\n          if (!aValidate.regexp.test(value2)) {\n            result = aValidate.message || messages.invalid;\n\n            if (aValidate.status) {\n              result = {\n                message: result,\n                status: aValidate.status\n              };\n            }\n          }\n        }\n\n        return result;\n      };\n\n      var validateField = function validateField(value2, data) {\n        var result;\n\n        if (required && ( // false is for CheckBox\n        value2 === undefined || value2 === '' || value2 === false)) {\n          result = messages.required;\n        } else if (validateArg) {\n          if (Array.isArray(validateArg)) {\n            validateArg.some(function (aValidate) {\n              result = validateSingle(aValidate, value2, data);\n              return !!result;\n            });\n          } else {\n            result = validateSingle(validateArg, value2, data);\n          }\n        }\n\n        return result;\n      };\n\n      if (required) {\n        setRequiredFields(function (prevValue) {\n          return !prevValue.includes(name) ? [].concat(prevValue, [name]) : prevValue;\n        });\n      } else {\n        setRequiredFields(function (prevValue) {\n          return prevValue.filter(function (v) {\n            return v !== name;\n          });\n        });\n      }\n\n      if (validateArg || required) {\n        validations.current[name] = validateField;\n        return function () {\n          return delete validations.current[name];\n        };\n      }\n\n      return undefined;\n    }, [error, name, required, validateArg]);\n    return {\n      error: error,\n      info: info,\n      inForm: true,\n      onBlur: validateOn === 'blur' ? function () {\n        return setPendingValidation(pendingValidation ? [].concat(pendingValidation, [name]) : [name]);\n      } : undefined,\n      onChange: validateOn === 'change' ? function () {\n        return setPendingValidation(pendingValidation ? [].concat(pendingValidation, [name]) : [name]);\n      } : undefined\n    };\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", _extends({\n    ref: ref\n  }, rest, {\n    onReset: function onReset(event) {\n      setPendingValidation(undefined);\n\n      if (!valueProp) {\n        setValueState(defaultValue);\n        if (onChange) onChange(defaultValue, {\n          touched: defaultTouched\n        });\n      }\n\n      setTouched(defaultTouched);\n      setValidationResults(defaultValidationResults);\n\n      if (_onReset) {\n        event.persist(); // extract from React's synthetic event pool\n\n        var adjustedEvent = event;\n        adjustedEvent.value = defaultValue;\n\n        _onReset(adjustedEvent);\n      }\n    },\n    onSubmit: function onSubmit(event) {\n      // Don't submit the form via browser form action. We don't want it\n      // if the validation fails. And, we assume a javascript action handler\n      // otherwise.\n      event.preventDefault();\n      setPendingValidation(undefined);\n\n      var _validate3 = validate(Object.entries(validations.current), value, true),\n          nextErrors = _validate3[0],\n          nextInfos = _validate3[1];\n\n      setValidationResults(function () {\n        var nextValidationResults = {\n          errors: nextErrors,\n          infos: nextInfos\n        };\n        if (onValidate) onValidate(nextValidationResults);\n        return nextValidationResults;\n      });\n\n      if (Object.keys(nextErrors).length === 0 && _onSubmit) {\n        event.persist(); // extract from React's synthetic event pool\n\n        var adjustedEvent = event;\n        adjustedEvent.value = value;\n        adjustedEvent.touched = touched;\n\n        _onSubmit(adjustedEvent);\n      }\n    }\n  }), /*#__PURE__*/React.createElement(FormContext.Provider, {\n    value: {\n      useFormField: useFormField,\n      useFormInput: useFormInput\n    }\n  }, children));\n});\nForm.displayName = 'Form';\nvar FormDoc;\n\nif (process.env.NODE_ENV !== 'production') {\n  FormDoc = require('./doc').doc(Form); // eslint-disable-line global-require\n}\n\nvar FormWrapper = FormDoc || Form;\nexport { FormWrapper as Form };"]},"metadata":{},"sourceType":"module"}