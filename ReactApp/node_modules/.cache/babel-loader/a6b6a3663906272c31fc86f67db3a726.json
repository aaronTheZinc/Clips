{"ast":null,"code":"import React, { useContext } from \"react\";\nimport app from \"firebase/app\";\nimport \"firebase/auth\";\nimport { registerUser } from \"../Backend/api\";\nimport { appState } from \"./Context\";\nimport Cookies from \"./cookies\";\nimport { useHistory } from \"react-router-dom\";\nconst config = {\n  apiKey: \"AIzaSyCCe3EZBhYzzDDjVhYp2DWULin4ItgIjKA\",\n  authDomain: \"clips-e8ad8.firebaseapp.com\",\n  projectId: \"clips-e8ad8\",\n  storageBucket: \"clips-e8ad8.appspot.com\",\n  messagingSenderId: \"38161657877\",\n  appId: \"1:38161657877:web:30befe0a6d2ef3e4139e1c\",\n  measurementId: \"G-P0Y59FWJ03\"\n};\napp.initializeApp(config);\nconst auth = app.auth();\nexport const fb_auth = auth;\nexport const doCreateUserWithEmailAndPassword = ({\n  email,\n  password,\n  username\n}) => {\n  const user = auth.createUserWithEmailAndPassword(email, password);\n  console.log(auth.currentUser.uid);\n  registerUser({\n    data: {\n      email: email,\n      username: username,\n      uid: auth.currentUser.uid\n    }\n  });\n};\nexport const doSignInWithEmailAndPassword = async ({\n  email,\n  password\n}) => {\n  const login = await auth.signInWithEmailAndPassword(email, password).then(userCredential => {\n    console.log('login ->', email, password); // setUid(userCredential.user.uid);\n    //  window.open('/hub', '_self')\n    // Signed in\n\n    console.log(userCredential.user.uid); // ...\n\n    return userCredential.user.uid;\n  }).catch(error => {\n    console.log('login ->', email, password);\n    console.log(error);\n    alert(error.code);\n    return {\n      error: error,\n      message: error.code\n    };\n  });\n  return login;\n};\nexport const doSignOut = () => {\n  try {\n    Cookies.cookies.clear();\n    auth.signOut().then(() => {\n      window.open('/login', '_self');\n    });\n    alert(\"logged Out!\");\n  } catch (e) {\n    alert(e);\n  }\n};\nexport const doPasswordReset = email => auth.sendPasswordResetEmail(email);\nexport const doPasswordUpdate = password => auth.currentUser.updatePassword(password);","map":{"version":3,"sources":["C:/Users/aaron/Documents/Clips/Clips/reactapp/src/Components/State/firebase.js"],"names":["React","useContext","app","registerUser","appState","Cookies","useHistory","config","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","auth","fb_auth","doCreateUserWithEmailAndPassword","email","password","username","user","createUserWithEmailAndPassword","console","log","currentUser","uid","data","doSignInWithEmailAndPassword","login","signInWithEmailAndPassword","then","userCredential","catch","error","alert","code","message","doSignOut","cookies","clear","signOut","window","open","e","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","updatePassword"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\r\nimport app from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport { registerUser } from \"../Backend/api\";\r\nimport { appState } from \"./Context\";\r\nimport Cookies from \"./cookies\";\r\nimport { useHistory } from \"react-router-dom\";\r\nconst config = {\r\n  apiKey: \"AIzaSyCCe3EZBhYzzDDjVhYp2DWULin4ItgIjKA\",\r\n  authDomain: \"clips-e8ad8.firebaseapp.com\",\r\n  projectId: \"clips-e8ad8\",\r\n  storageBucket: \"clips-e8ad8.appspot.com\",\r\n  messagingSenderId: \"38161657877\",\r\n  appId: \"1:38161657877:web:30befe0a6d2ef3e4139e1c\",\r\n  measurementId: \"G-P0Y59FWJ03\",\r\n};\r\n\r\napp.initializeApp(config);\r\n\r\nconst auth = app.auth();\r\nexport const fb_auth = auth;\r\nexport const doCreateUserWithEmailAndPassword = ({\r\n  email,\r\n  password,\r\n  username,\r\n}) => {\r\n  const user = auth.createUserWithEmailAndPassword(email, password);\r\n  console.log(auth.currentUser.uid);\r\n  registerUser({\r\n    data: { email: email, username: username, uid: auth.currentUser.uid },\r\n  });\r\n};\r\n\r\nexport const doSignInWithEmailAndPassword = async({email, password}) => {\r\n const login = await auth.signInWithEmailAndPassword(email, password)\r\n  .then((userCredential) => {\r\nconsole.log('login ->', email, password)\r\n    // setUid(userCredential.user.uid);\r\n    //  window.open('/hub', '_self')\r\n    // Signed in\r\n   console.log(userCredential.user.uid)\r\n    // ...\r\n    return userCredential.user.uid\r\n  })\r\n  .catch((error) => {\r\n    console.log('login ->', email, password)\r\n    console.log(error)\r\n    alert(error.code)\r\n    return {\r\n      error: error,\r\n      message: error.code\r\n    }\r\n  });\r\n  return login\r\n}\r\n \r\n\r\nexport const doSignOut = () => {\r\n  try {\r\n    Cookies.cookies.clear();\r\n    auth.signOut().then(() => {\r\n      window.open('/login', '_self')\r\n    });\r\n    alert(\"logged Out!\");\r\n  } catch (e) {\r\n    alert(e);\r\n  }\r\n};\r\n\r\nexport const doPasswordReset = (email) => auth.sendPasswordResetEmail(email);\r\n\r\nexport const doPasswordUpdate = (password) =>\r\n  auth.currentUser.updatePassword(password);\r\n"]},"metadata":{},"sourceType":"module"}