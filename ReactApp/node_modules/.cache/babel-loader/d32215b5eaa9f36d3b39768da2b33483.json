{"ast":null,"code":"import React, { useContext } from \"react\";\nimport app from \"firebase/app\";\nimport \"firebase/auth\";\nimport { registerUser } from \"../Backend/api\";\nimport { appState } from \"./Context\";\nimport Cookies from \"./cookies\";\nimport { useHistory } from \"react-router-dom\";\nconst config = {\n  apiKey: \"AIzaSyCCe3EZBhYzzDDjVhYp2DWULin4ItgIjKA\",\n  authDomain: \"clips-e8ad8.firebaseapp.com\",\n  projectId: \"clips-e8ad8\",\n  storageBucket: \"clips-e8ad8.appspot.com\",\n  messagingSenderId: \"38161657877\",\n  appId: \"1:38161657877:web:30befe0a6d2ef3e4139e1c\",\n  measurementId: \"G-P0Y59FWJ03\"\n};\napp.initializeApp(config);\nconst auth = app.auth();\nexport const fb_auth = auth;\nexport const doCreateUserWithEmailAndPassword = ({\n  email,\n  password,\n  username\n}, next) => {\n  const user = auth.createUserWithEmailAndPassword(email, password).then(client => {\n    registerUser({\n      data: {\n        email: email,\n        username: username,\n        uid: client.user.uid\n      }\n    });\n    next();\n  });\n};\nexport const doSignInWithEmailAndPassword = async ({\n  email,\n  password\n}, next) => {\n  const login = await auth.signInWithEmailAndPassword(email, password).then(userCredential => {\n    console.log(\"login ->\", email, password);\n    next(); // ...\n\n    return userCredential.user.uid;\n  }).catch(error => {\n    console.log(\"login ->\", email, password);\n    console.log(error);\n    return {\n      error: error,\n      message: error.code\n    };\n  });\n  return login;\n};\nexport const doSignOut = () => {\n  try {\n    Cookies.cookies.clear();\n    auth.signOut().then(() => {\n      window.open(\"/login\", \"_self\");\n    });\n  } catch (e) {}\n};\nexport const doPasswordReset = email => auth.sendPasswordResetEmail(email);\nexport const doPasswordUpdate = password => auth.currentUser.updatePassword(password);","map":{"version":3,"sources":["/Users/aaronmarsh/Documents/Clips/ReactApp/src/Components/State/firebase.js"],"names":["React","useContext","app","registerUser","appState","Cookies","useHistory","config","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","auth","fb_auth","doCreateUserWithEmailAndPassword","email","password","username","next","user","createUserWithEmailAndPassword","then","client","data","uid","doSignInWithEmailAndPassword","login","signInWithEmailAndPassword","userCredential","console","log","catch","error","message","code","doSignOut","cookies","clear","signOut","window","open","e","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","currentUser","updatePassword"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,OAAO,eAAP;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,QAAT,QAAyB,WAAzB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,MAAMC,MAAM,GAAG;AACbC,EAAAA,MAAM,EAAE,yCADK;AAEbC,EAAAA,UAAU,EAAE,6BAFC;AAGbC,EAAAA,SAAS,EAAE,aAHE;AAIbC,EAAAA,aAAa,EAAE,yBAJF;AAKbC,EAAAA,iBAAiB,EAAE,aALN;AAMbC,EAAAA,KAAK,EAAE,0CANM;AAObC,EAAAA,aAAa,EAAE;AAPF,CAAf;AAUAZ,GAAG,CAACa,aAAJ,CAAkBR,MAAlB;AAEA,MAAMS,IAAI,GAAGd,GAAG,CAACc,IAAJ,EAAb;AACA,OAAO,MAAMC,OAAO,GAAGD,IAAhB;AACP,OAAO,MAAME,gCAAgC,GAAG,CAC9C;AAAEC,EAAAA,KAAF;AAASC,EAAAA,QAAT;AAAmBC,EAAAA;AAAnB,CAD8C,EAE9CC,IAF8C,KAG3C;AACH,QAAMC,IAAI,GAAGP,IAAI,CACdQ,8BADU,CACqBL,KADrB,EAC4BC,QAD5B,EAEVK,IAFU,CAEJC,MAAD,IAAY;AAChBvB,IAAAA,YAAY,CAAC;AACXwB,MAAAA,IAAI,EAAE;AAAER,QAAAA,KAAK,EAAEA,KAAT;AAAgBE,QAAAA,QAAQ,EAAEA,QAA1B;AAAoCO,QAAAA,GAAG,EAAEF,MAAM,CAACH,IAAP,CAAYK;AAArD;AADK,KAAD,CAAZ;AAGAN,IAAAA,IAAI;AACL,GAPU,CAAb;AAQD,CAZM;AAcP,OAAO,MAAMO,4BAA4B,GAAG,OAC1C;AAAEV,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAD0C,EAE1CE,IAF0C,KAGvC;AACH,QAAMQ,KAAK,GAAG,MAAMd,IAAI,CACrBe,0BADiB,CACUZ,KADV,EACiBC,QADjB,EAEjBK,IAFiB,CAEXO,cAAD,IAAoB;AACxBC,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBf,KAAxB,EAA+BC,QAA/B;AACAE,IAAAA,IAAI,GAFoB,CAGxB;;AACA,WAAOU,cAAc,CAACT,IAAf,CAAoBK,GAA3B;AACD,GAPiB,EAQjBO,KARiB,CAQVC,KAAD,IAAW;AAChBH,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBf,KAAxB,EAA+BC,QAA/B;AACAa,IAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACA,WAAO;AACLA,MAAAA,KAAK,EAAEA,KADF;AAELC,MAAAA,OAAO,EAAED,KAAK,CAACE;AAFV,KAAP;AAID,GAfiB,CAApB;AAgBA,SAAOR,KAAP;AACD,CArBM;AAuBP,OAAO,MAAMS,SAAS,GAAG,MAAM;AAC7B,MAAI;AACFlC,IAAAA,OAAO,CAACmC,OAAR,CAAgBC,KAAhB;AACAzB,IAAAA,IAAI,CAAC0B,OAAL,GAAejB,IAAf,CAAoB,MAAM;AACxBkB,MAAAA,MAAM,CAACC,IAAP,CAAY,QAAZ,EAAsB,OAAtB;AACD,KAFD;AAGD,GALD,CAKE,OAAOC,CAAP,EAAU,CAAE;AACf,CAPM;AASP,OAAO,MAAMC,eAAe,GAAI3B,KAAD,IAAWH,IAAI,CAAC+B,sBAAL,CAA4B5B,KAA5B,CAAnC;AAEP,OAAO,MAAM6B,gBAAgB,GAAI5B,QAAD,IAC9BJ,IAAI,CAACiC,WAAL,CAAiBC,cAAjB,CAAgC9B,QAAhC,CADK","sourcesContent":["import React, { useContext } from \"react\";\nimport app from \"firebase/app\";\nimport \"firebase/auth\";\nimport { registerUser } from \"../Backend/api\";\nimport { appState } from \"./Context\";\nimport Cookies from \"./cookies\";\nimport { useHistory } from \"react-router-dom\";\nconst config = {\n  apiKey: \"AIzaSyCCe3EZBhYzzDDjVhYp2DWULin4ItgIjKA\",\n  authDomain: \"clips-e8ad8.firebaseapp.com\",\n  projectId: \"clips-e8ad8\",\n  storageBucket: \"clips-e8ad8.appspot.com\",\n  messagingSenderId: \"38161657877\",\n  appId: \"1:38161657877:web:30befe0a6d2ef3e4139e1c\",\n  measurementId: \"G-P0Y59FWJ03\",\n};\n\napp.initializeApp(config);\n\nconst auth = app.auth();\nexport const fb_auth = auth;\nexport const doCreateUserWithEmailAndPassword = (\n  { email, password, username },\n  next\n) => {\n  const user = auth\n    .createUserWithEmailAndPassword(email, password)\n    .then((client) => {\n      registerUser({\n        data: { email: email, username: username, uid: client.user.uid},\n      });\n      next();\n    });\n};\n\nexport const doSignInWithEmailAndPassword = async (\n  { email, password },\n  next\n) => {\n  const login = await auth\n    .signInWithEmailAndPassword(email, password)\n    .then((userCredential) => {\n      console.log(\"login ->\", email, password);\n      next();\n      // ...\n      return userCredential.user.uid;\n    })\n    .catch((error) => {\n      console.log(\"login ->\", email, password);\n      console.log(error);\n      return {\n        error: error,\n        message: error.code,\n      };\n    });\n  return login;\n};\n\nexport const doSignOut = () => {\n  try {\n    Cookies.cookies.clear();\n    auth.signOut().then(() => {\n      window.open(\"/login\", \"_self\");\n    });\n  } catch (e) {}\n};\n\nexport const doPasswordReset = (email) => auth.sendPasswordResetEmail(email);\n\nexport const doPasswordUpdate = (password) =>\n  auth.currentUser.updatePassword(password);\n"]},"metadata":{},"sourceType":"module"}