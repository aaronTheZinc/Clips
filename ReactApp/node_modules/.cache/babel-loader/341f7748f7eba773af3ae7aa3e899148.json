{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isDate;\n\nvar _index = _interopRequireDefault(require(\"../_lib/requiredArgs/index.js\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\r\n * @name isDate\r\n * @category Common Helpers\r\n * @summary Is the given value a date?\r\n *\r\n * @description\r\n * Returns true if the given value is an instance of Date. The function works for dates transferred across iframes.\r\n *\r\n * ### v2.0.0 breaking changes:\r\n *\r\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\r\n *\r\n * @param {*} value - the value to check\r\n * @returns {boolean} true if the given value is a date\r\n * @throws {TypeError} 1 arguments required\r\n *\r\n * @example\r\n * // For a valid date:\r\n * var result = isDate(new Date())\r\n * //=> true\r\n *\r\n * @example\r\n * // For an invalid date:\r\n * var result = isDate(new Date(NaN))\r\n * //=> true\r\n *\r\n * @example\r\n * // For some value:\r\n * var result = isDate('2014-02-31')\r\n * //=> false\r\n *\r\n * @example\r\n * // For an object:\r\n * var result = isDate({})\r\n * //=> false\r\n */\n\n\nfunction isDate(value) {\n  (0, _index.default)(1, arguments);\n  return value instanceof Date || typeof value === 'object' && Object.prototype.toString.call(value) === '[object Date]';\n}\n\nmodule.exports = exports.default;","map":{"version":3,"sources":["C:/Users/aaron/Documents/Clips/Clips/ReactApp/node_modules/date-fns/isDate/index.js"],"names":["Object","defineProperty","exports","value","default","isDate","_index","_interopRequireDefault","require","obj","__esModule","arguments","Date","prototype","toString","call","module"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,MAAlB;;AAEA,IAAIC,MAAM,GAAGC,sBAAsB,CAACC,OAAO,CAAC,+BAAD,CAAR,CAAnC;;AAEA,SAASD,sBAAT,CAAgCE,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEL,IAAAA,OAAO,EAAEK;AAAX,GAArC;AAAwD;AAE/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASJ,MAAT,CAAgBF,KAAhB,EAAuB;AACrB,GAAC,GAAGG,MAAM,CAACF,OAAX,EAAoB,CAApB,EAAuBO,SAAvB;AACA,SAAOR,KAAK,YAAYS,IAAjB,IAAyB,OAAOT,KAAP,KAAiB,QAAjB,IAA6BH,MAAM,CAACa,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BZ,KAA/B,MAA0C,eAAvG;AACD;;AAEDa,MAAM,CAACd,OAAP,GAAiBA,OAAO,CAACE,OAAzB","sourcesContent":["\"use strict\";\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = isDate;\r\n\r\nvar _index = _interopRequireDefault(require(\"../_lib/requiredArgs/index.js\"));\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\r\n/**\r\n * @name isDate\r\n * @category Common Helpers\r\n * @summary Is the given value a date?\r\n *\r\n * @description\r\n * Returns true if the given value is an instance of Date. The function works for dates transferred across iframes.\r\n *\r\n * ### v2.0.0 breaking changes:\r\n *\r\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\r\n *\r\n * @param {*} value - the value to check\r\n * @returns {boolean} true if the given value is a date\r\n * @throws {TypeError} 1 arguments required\r\n *\r\n * @example\r\n * // For a valid date:\r\n * var result = isDate(new Date())\r\n * //=> true\r\n *\r\n * @example\r\n * // For an invalid date:\r\n * var result = isDate(new Date(NaN))\r\n * //=> true\r\n *\r\n * @example\r\n * // For some value:\r\n * var result = isDate('2014-02-31')\r\n * //=> false\r\n *\r\n * @example\r\n * // For an object:\r\n * var result = isDate({})\r\n * //=> false\r\n */\r\nfunction isDate(value) {\r\n  (0, _index.default)(1, arguments);\r\n  return value instanceof Date || typeof value === 'object' && Object.prototype.toString.call(value) === '[object Date]';\r\n}\r\n\r\nmodule.exports = exports.default;"]},"metadata":{},"sourceType":"script"}