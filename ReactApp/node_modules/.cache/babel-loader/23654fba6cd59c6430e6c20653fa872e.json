{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = differenceInCalendarDays;\n\nvar _index = _interopRequireDefault(require(\"../_lib/getTimezoneOffsetInMilliseconds/index.js\"));\n\nvar _index2 = _interopRequireDefault(require(\"../startOfDay/index.js\"));\n\nvar _index3 = _interopRequireDefault(require(\"../_lib/requiredArgs/index.js\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar MILLISECONDS_IN_DAY = 86400000;\n/**\r\n * @name differenceInCalendarDays\r\n * @category Day Helpers\r\n * @summary Get the number of calendar days between the given dates.\r\n *\r\n * @description\r\n * Get the number of calendar days between the given dates. This means that the times are removed\r\n * from the dates and then the difference in days is calculated.\r\n *\r\n * ### v2.0.0 breaking changes:\r\n *\r\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\r\n *\r\n * @param {Date|Number} dateLeft - the later date\r\n * @param {Date|Number} dateRight - the earlier date\r\n * @returns {Number} the number of calendar days\r\n * @throws {TypeError} 2 arguments required\r\n *\r\n * @example\r\n * // How many calendar days are between\r\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\r\n * var result = differenceInCalendarDays(\r\n *   new Date(2012, 6, 2, 0, 0),\r\n *   new Date(2011, 6, 2, 23, 0)\r\n * )\r\n * //=> 366\r\n * // How many calendar days are between\r\n * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?\r\n * var result = differenceInCalendarDays(\r\n *   new Date(2011, 6, 3, 0, 1),\r\n *   new Date(2011, 6, 2, 23, 59)\r\n * )\r\n * //=> 1\r\n */\n\nfunction differenceInCalendarDays(dirtyDateLeft, dirtyDateRight) {\n  (0, _index3.default)(2, arguments);\n  var startOfDayLeft = (0, _index2.default)(dirtyDateLeft);\n  var startOfDayRight = (0, _index2.default)(dirtyDateRight);\n  var timestampLeft = startOfDayLeft.getTime() - (0, _index.default)(startOfDayLeft);\n  var timestampRight = startOfDayRight.getTime() - (0, _index.default)(startOfDayRight); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a day is not constant\n  // (e.g. it's different in the day of the daylight saving time clock shift)\n\n  return Math.round((timestampLeft - timestampRight) / MILLISECONDS_IN_DAY);\n}\n\nmodule.exports = exports.default;","map":{"version":3,"sources":["C:/Users/aaron/Documents/Clips/Clips/reactapp/node_modules/date-fns/differenceInCalendarDays/index.js"],"names":["Object","defineProperty","exports","value","default","differenceInCalendarDays","_index","_interopRequireDefault","require","_index2","_index3","obj","__esModule","MILLISECONDS_IN_DAY","dirtyDateLeft","dirtyDateRight","arguments","startOfDayLeft","startOfDayRight","timestampLeft","getTime","timestampRight","Math","round","module"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,wBAAlB;;AAEA,IAAIC,MAAM,GAAGC,sBAAsB,CAACC,OAAO,CAAC,kDAAD,CAAR,CAAnC;;AAEA,IAAIC,OAAO,GAAGF,sBAAsB,CAACC,OAAO,CAAC,wBAAD,CAAR,CAApC;;AAEA,IAAIE,OAAO,GAAGH,sBAAsB,CAACC,OAAO,CAAC,+BAAD,CAAR,CAApC;;AAEA,SAASD,sBAAT,CAAgCI,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEP,IAAAA,OAAO,EAAEO;AAAX,GAArC;AAAwD;;AAE/F,IAAIE,mBAAmB,GAAG,QAA1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASR,wBAAT,CAAkCS,aAAlC,EAAiDC,cAAjD,EAAiE;AAC/D,GAAC,GAAGL,OAAO,CAACN,OAAZ,EAAqB,CAArB,EAAwBY,SAAxB;AACA,MAAIC,cAAc,GAAG,CAAC,GAAGR,OAAO,CAACL,OAAZ,EAAqBU,aAArB,CAArB;AACA,MAAII,eAAe,GAAG,CAAC,GAAGT,OAAO,CAACL,OAAZ,EAAqBW,cAArB,CAAtB;AACA,MAAII,aAAa,GAAGF,cAAc,CAACG,OAAf,KAA2B,CAAC,GAAGd,MAAM,CAACF,OAAX,EAAoBa,cAApB,CAA/C;AACA,MAAII,cAAc,GAAGH,eAAe,CAACE,OAAhB,KAA4B,CAAC,GAAGd,MAAM,CAACF,OAAX,EAAoBc,eAApB,CAAjD,CAL+D,CAKwB;AACvF;AACA;;AAEA,SAAOI,IAAI,CAACC,KAAL,CAAW,CAACJ,aAAa,GAAGE,cAAjB,IAAmCR,mBAA9C,CAAP;AACD;;AAEDW,MAAM,CAACtB,OAAP,GAAiBA,OAAO,CAACE,OAAzB","sourcesContent":["\"use strict\";\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = differenceInCalendarDays;\r\n\r\nvar _index = _interopRequireDefault(require(\"../_lib/getTimezoneOffsetInMilliseconds/index.js\"));\r\n\r\nvar _index2 = _interopRequireDefault(require(\"../startOfDay/index.js\"));\r\n\r\nvar _index3 = _interopRequireDefault(require(\"../_lib/requiredArgs/index.js\"));\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\r\nvar MILLISECONDS_IN_DAY = 86400000;\r\n/**\r\n * @name differenceInCalendarDays\r\n * @category Day Helpers\r\n * @summary Get the number of calendar days between the given dates.\r\n *\r\n * @description\r\n * Get the number of calendar days between the given dates. This means that the times are removed\r\n * from the dates and then the difference in days is calculated.\r\n *\r\n * ### v2.0.0 breaking changes:\r\n *\r\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\r\n *\r\n * @param {Date|Number} dateLeft - the later date\r\n * @param {Date|Number} dateRight - the earlier date\r\n * @returns {Number} the number of calendar days\r\n * @throws {TypeError} 2 arguments required\r\n *\r\n * @example\r\n * // How many calendar days are between\r\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\r\n * var result = differenceInCalendarDays(\r\n *   new Date(2012, 6, 2, 0, 0),\r\n *   new Date(2011, 6, 2, 23, 0)\r\n * )\r\n * //=> 366\r\n * // How many calendar days are between\r\n * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?\r\n * var result = differenceInCalendarDays(\r\n *   new Date(2011, 6, 3, 0, 1),\r\n *   new Date(2011, 6, 2, 23, 59)\r\n * )\r\n * //=> 1\r\n */\r\n\r\nfunction differenceInCalendarDays(dirtyDateLeft, dirtyDateRight) {\r\n  (0, _index3.default)(2, arguments);\r\n  var startOfDayLeft = (0, _index2.default)(dirtyDateLeft);\r\n  var startOfDayRight = (0, _index2.default)(dirtyDateRight);\r\n  var timestampLeft = startOfDayLeft.getTime() - (0, _index.default)(startOfDayLeft);\r\n  var timestampRight = startOfDayRight.getTime() - (0, _index.default)(startOfDayRight); // Round the number of days to the nearest integer\r\n  // because the number of milliseconds in a day is not constant\r\n  // (e.g. it's different in the day of the daylight saving time clock shift)\r\n\r\n  return Math.round((timestampLeft - timestampRight) / MILLISECONDS_IN_DAY);\r\n}\r\n\r\nmodule.exports = exports.default;"]},"metadata":{},"sourceType":"script"}