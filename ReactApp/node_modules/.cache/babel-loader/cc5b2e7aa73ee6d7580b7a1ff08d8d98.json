{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aaron\\\\Documents\\\\Clips\\\\Clips\\\\ReactApp\\\\src\\\\Components\\\\UI\\\\Chat\\\\chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from 'react';\nimport ChatContainer from '../Bubble/index';\nimport './index.css';\nimport io from 'socket.io-client';\nconst username = \"aaronmarsh\";\nconst socket = io(\"http://localhost:5000\", {\n  transports: [\"websocket\", \"polling\"]\n});\n\nconst Chat = () => {\n  _s();\n\n  const [users, setUsers] = useState([]);\n  const [message, setMessage] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const socketRef = useRef();\n  useEffect(() => {\n    socketRef.current = io.connect(\"http://localhost:4000\");\n    socketRef.current.on(\"message\", ({\n      name,\n      message\n    }) => {\n      setChat([...chat, {\n        name,\n        message\n      }]);\n    });\n    return () => socketRef.current.disconnect();\n  }, [chat]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"scroll\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, messages.map(m => {\n    return /*#__PURE__*/React.createElement(ChatContainer, {\n      text: m.text,\n      header: m.header,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 15\n      }\n    });\n  })));\n};\n\n_s(Chat, \"V3cyqk987aLh8z4h4V6xoLXsg00=\");\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["C:/Users/aaron/Documents/Clips/Clips/ReactApp/src/Components/UI/Chat/chat.js"],"names":["React","useEffect","useState","useRef","ChatContainer","io","username","socket","transports","Chat","users","setUsers","message","setMessage","messages","setMessages","socketRef","current","connect","on","name","setChat","chat","disconnect","map","m","text","header"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,EAAoCC,MAApC,QAAiD,OAAjD;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAO,aAAP;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,MAAMC,QAAQ,GAAG,YAAjB;AACA,MAAMC,MAAM,GAAGF,EAAE,CAAC,uBAAD,EAA0B;AACzCG,EAAAA,UAAU,EAAE,CAAC,WAAD,EAAc,SAAd;AAD6B,CAA1B,CAAjB;;AAKA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACY,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,EAAD,CAAxC;AAEA,QAAMc,SAAS,GAAGb,MAAM,EAAxB;AAEAF,EAAAA,SAAS,CACT,MAAM;AACLe,IAAAA,SAAS,CAACC,OAAV,GAAoBZ,EAAE,CAACa,OAAH,CAAW,uBAAX,CAApB;AACAF,IAAAA,SAAS,CAACC,OAAV,CAAkBE,EAAlB,CAAqB,SAArB,EAAgC,CAAC;AAAEC,MAAAA,IAAF;AAAQR,MAAAA;AAAR,KAAD,KAAuB;AACtDS,MAAAA,OAAO,CAAC,CAAE,GAAGC,IAAL,EAAW;AAAEF,QAAAA,IAAF;AAAQR,QAAAA;AAAR,OAAX,CAAD,CAAP;AACA,KAFD;AAGA,WAAO,MAAMI,SAAS,CAACC,OAAV,CAAkBM,UAAlB,EAAb;AACA,GAPQ,EAQT,CAAED,IAAF,CARS,CAAT;AAaA,sBACE,uDACA;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEGR,QAAQ,CAACU,GAAT,CAAaC,CAAC,IAAI;AAClB,wBAAO,oBAAC,aAAD;AAAe,MAAA,IAAI,EAAEA,CAAC,CAACC,IAAvB;AAA6B,MAAA,MAAM,EAAED,CAAC,CAACE,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACC,GAFD,CAFH,CADA,CADF;AAYD,CAhCD;;GAAMlB,I;;KAAAA,I;AAkCN,eAAeA,IAAf","sourcesContent":["import React, {useEffect, useState, useRef} from 'react'\r\nimport ChatContainer from '../Bubble/index'\r\nimport './index.css'\r\nimport io from 'socket.io-client'\r\nconst username = \"aaronmarsh\"\r\nconst socket = io(\"http://localhost:5000\", {\r\n  transports: [\"websocket\", \"polling\"]\r\n});\r\n\r\n\r\nconst Chat = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [messages, setMessages] = useState([]);\r\n\r\n  const socketRef = useRef()\r\n  \r\n  useEffect(\r\n\t\t() => {\r\n\t\t\tsocketRef.current = io.connect(\"http://localhost:4000\")\r\n\t\t\tsocketRef.current.on(\"message\", ({ name, message }) => {\r\n\t\t\t\tsetChat([ ...chat, { name, message } ])\r\n\t\t\t})\r\n\t\t\treturn () => socketRef.current.disconnect()\r\n\t\t},\r\n\t\t[ chat ]\r\n\t)\r\n\r\n  \r\n  \r\n  return (\r\n    <>\r\n    <div className='scroll'>\r\n     {\r\n       messages.map(m => {\r\n       return <ChatContainer text={m.text} header={m.header} />\r\n       })\r\n     }\r\n     </div>\r\n    \r\n    </>\r\n  );\r\n}\r\n\r\nexport default Chat;\r\n"]},"metadata":{},"sourceType":"module"}