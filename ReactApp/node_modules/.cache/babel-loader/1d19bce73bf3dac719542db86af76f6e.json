{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aaron\\\\Documents\\\\Clips\\\\Clips\\\\ReactApp\\\\src\\\\Components\\\\UI\\\\Chat\\\\chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from 'react';\nimport ChatContainer from '../Bubble/index';\nimport './index.css';\nimport io from 'socket.io-client';\nconst username = \"aaronmarsh\";\nconst socket = io(\"http://localhost:5000\", {\n  transports: [\"websocket\", \"polling\"]\n});\n\nconst Chat = () => {\n  _s();\n\n  const [state, setState] = useState({\n    message: \"\",\n    name: \"\"\n  });\n  const [chat, setChat] = useState([]);\n  const socketRef = useRef();\n  useEffect(() => {\n    socketRef.current = io.connect(\"http://localhost:5000\");\n    socketRef.current.on(\"message\", ({\n      name,\n      message\n    }) => {\n      setChat([...chat, {\n        name,\n        message\n      }]);\n    });\n    return () => socketRef.current.disconnect();\n  }, []);\n\n  const getSession = () => socketRef.current.emit(\"message\", {\n    username: \"aaronmarsh\"\n  });\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"scroll\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, [].map(m => {\n    return /*#__PURE__*/React.createElement(ChatContainer, {\n      text: m.text,\n      header: m.header,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 15\n      }\n    });\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => getSession(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 6\n    }\n  }, \"Hello\")));\n};\n\n_s(Chat, \"oPp8AreUOgmwk3aeyTZ7KwCbCqY=\");\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["C:/Users/aaron/Documents/Clips/Clips/ReactApp/src/Components/UI/Chat/chat.js"],"names":["React","useEffect","useState","useRef","ChatContainer","io","username","socket","transports","Chat","state","setState","message","name","chat","setChat","socketRef","current","connect","on","disconnect","getSession","emit","map","m","text","header"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,EAAoCC,MAApC,QAAiD,OAAjD;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAO,aAAP;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,MAAMC,QAAQ,GAAG,YAAjB;AACA,MAAMC,MAAM,GAAGF,EAAE,CAAC,uBAAD,EAA0B;AACzCG,EAAAA,UAAU,EAAE,CAAC,WAAD,EAAc,SAAd;AAD6B,CAA1B,CAAjB;;AAKA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AAEjB,QAAM,CAAEC,KAAF,EAASC,QAAT,IAAsBT,QAAQ,CAAC;AAAEU,IAAAA,OAAO,EAAE,EAAX;AAAeC,IAAAA,IAAI,EAAE;AAArB,GAAD,CAApC;AACD,QAAM,CAAEC,IAAF,EAAQC,OAAR,IAAoBb,QAAQ,CAAC,EAAD,CAAlC;AACC,QAAMc,SAAS,GAAGb,MAAM,EAAxB;AAEAF,EAAAA,SAAS,CACT,MAAM;AACLe,IAAAA,SAAS,CAACC,OAAV,GAAoBZ,EAAE,CAACa,OAAH,CAAW,uBAAX,CAApB;AACAF,IAAAA,SAAS,CAACC,OAAV,CAAkBE,EAAlB,CAAqB,SAArB,EAAgC,CAAC;AAAEN,MAAAA,IAAF;AAAQD,MAAAA;AAAR,KAAD,KAAuB;AACtDG,MAAAA,OAAO,CAAC,CAAE,GAAGD,IAAL,EAAW;AAAED,QAAAA,IAAF;AAAQD,QAAAA;AAAR,OAAX,CAAD,CAAP;AACA,KAFD;AAGA,WAAO,MAAMI,SAAS,CAACC,OAAV,CAAkBG,UAAlB,EAAb;AACA,GAPQ,EAQT,EARS,CAAT;;AAUF,QAAMC,UAAU,GAAG,MAAML,SAAS,CAACC,OAAV,CAAkBK,IAAlB,CAAuB,SAAvB,EAAkC;AAAChB,IAAAA,QAAQ,EAAE;AAAX,GAAlC,CAAzB;;AAGE,sBACE,uDACA;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEG,GAAGiB,GAAH,CAAOC,CAAC,IAAI;AACZ,wBAAO,oBAAC,aAAD;AAAe,MAAA,IAAI,EAAEA,CAAC,CAACC,IAAvB;AAA6B,MAAA,MAAM,EAAED,CAAC,CAACE,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACC,GAFD,CAFH,eAMC;AAAQ,IAAA,OAAO,EAAE,MAAKL,UAAU,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAND,CADA,CADF;AAaD,CAhCD;;GAAMZ,I;;KAAAA,I;AAkCN,eAAeA,IAAf","sourcesContent":["import React, {useEffect, useState, useRef} from 'react'\r\nimport ChatContainer from '../Bubble/index'\r\nimport './index.css'\r\nimport io from 'socket.io-client'\r\nconst username = \"aaronmarsh\"\r\nconst socket = io(\"http://localhost:5000\", {\r\n  transports: [\"websocket\", \"polling\"]\r\n});\r\n\r\n\r\nconst Chat = () => {\r\n\r\n  const [ state, setState ] = useState({ message: \"\", name: \"\" })\r\n\tconst [ chat, setChat ] = useState([])\r\n  const socketRef = useRef()\r\n\r\n  useEffect(\r\n\t\t() => {\r\n\t\t\tsocketRef.current = io.connect(\"http://localhost:5000\")\r\n\t\t\tsocketRef.current.on(\"message\", ({ name, message }) => {\r\n\t\t\t\tsetChat([ ...chat, { name, message } ])\r\n\t\t\t})\r\n\t\t\treturn () => socketRef.current.disconnect()\r\n\t\t},\r\n\t\t[]\r\n\t)\r\nconst getSession = () => socketRef.current.emit(\"message\", {username: \"aaronmarsh\"})\r\n  \r\n  \r\n  return (\r\n    <>\r\n    <div className='scroll'>\r\n     {\r\n       [].map(m => {\r\n       return <ChatContainer text={m.text} header={m.header} />\r\n       })\r\n     }\r\n     <button onClick={()=> getSession()}>Hello</button>\r\n     </div>\r\n    \r\n    </>\r\n  );\r\n}\r\n\r\nexport default Chat;\r\n"]},"metadata":{},"sourceType":"module"}