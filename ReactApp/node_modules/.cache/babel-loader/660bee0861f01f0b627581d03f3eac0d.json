{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aaron\\\\Documents\\\\Clips\\\\Clips\\\\ReactApp\\\\src\\\\Components\\\\State\\\\UserProvider.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport Cookies from './cookies';\nimport { hub as HubContext } from './Context';\nconst baseUrl = 'http://localhost:5000'; // This context provider is passed to any component requiring the context\n\nimport { context } from './Context';\nexport const HubProvider = ({\n  children\n}) => {\n  _s();\n\n  const [data, setData] = useState(null);\n  const [pageData, setPageData] = useState();\n  const [loaded, setLoaded] = useState(false);\n  useEffect(async () => {\n    const token = Cookies.cookies.readToken();\n    const api_result = await axios.get(`${baseUrl}/hub?token${token}`);\n    const {\n      data\n    } = api_result;\n\n    if (!data.status === 403) {\n      setLoaded(true);\n      setPageData(data);\n    } else {\n      return 'Error';\n    }\n  }, []);\n  const {\n    Provider\n  } = HubContext;\n  return /*#__PURE__*/React.createElement(Provider, {\n    value: {\n      data: 'Hello from context!'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 8\n    }\n  }, children);\n};\n\n_s(HubProvider, \"d5FG4EqM8bCsLKRVY0LNH8iyhUY=\");\n\n_c = HubProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"HubProvider\");","map":{"version":3,"sources":["C:/Users/aaron/Documents/Clips/Clips/ReactApp/src/Components/State/UserProvider.js"],"names":["React","createContext","useState","useEffect","axios","Cookies","hub","HubContext","baseUrl","context","HubProvider","children","data","setData","pageData","setPageData","loaded","setLoaded","token","cookies","readToken","api_result","get","status","Provider"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,EAAyCC,SAAzC,QAA0D,OAA1D;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAAQC,GAAG,IAAIC,UAAf,QAAgC,WAAhC;AACA,MAAMC,OAAO,GAAG,uBAAhB,C,CACA;;AAEA,SAASC,OAAT,QAAwB,WAAxB;AAEA,OAAO,MAAMC,WAAW,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAe;AAAA;;AACtC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,IAAD,CAAhC;AAEA,QAAM,CAACY,QAAD,EAAWC,WAAX,IAA2Bb,QAAQ,EAAzC;AACA,QAAM,CAACc,MAAD,EAASC,SAAT,IAAsBf,QAAQ,CAAC,KAAD,CAApC;AACAC,EAAAA,SAAS,CAAC,YAAW;AACnB,UAAMe,KAAK,GAAGb,OAAO,CAACc,OAAR,CAAgBC,SAAhB,EAAd;AACA,UAAMC,UAAU,GAAG,MAAMjB,KAAK,CAACkB,GAAN,CAAW,GAAEd,OAAQ,aAAYU,KAAM,EAAvC,CAAzB;AACI,UAAM;AAACN,MAAAA;AAAD,QAASS,UAAf;;AACI,QAAG,CAACT,IAAI,CAACW,MAAN,KAAiB,GAApB,EAAyB;AACrBN,MAAAA,SAAS,CAAC,IAAD,CAAT;AACAF,MAAAA,WAAW,CAACH,IAAD,CAAX;AACH,KAHD,MAGO;AACH,aAAO,OAAP;AACH;AAEV,GAXQ,EAWP,EAXO,CAAT;AAYD,QAAM;AAAEY,IAAAA;AAAF,MAAejB,UAArB;AACA,sBACI,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAE;AAACK,MAAAA,IAAI,EAAC;AAAN,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,QADL,CADJ;AAKF,CAvBM;;GAAMD,W;;KAAAA,W","sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\r\nimport axios from 'axios';\r\nimport Cookies from './cookies'\r\nimport {hub as HubContext} from './Context'\r\nconst baseUrl = 'http://localhost:5000'\r\n// This context provider is passed to any component requiring the context\r\n\r\nimport { context } from './Context'\r\n\r\nexport const HubProvider = ({children}) =>{\r\n    const [data, setData] = useState(null)\r\n  \r\n    const [pageData, setPageData ] = useState()\r\n    const [loaded, setLoaded] = useState(false)\r\n    useEffect(async() => {\r\n      const token = Cookies.cookies.readToken()\r\n      const api_result = await axios.get(`${baseUrl}/hub?token${token}`)\r\n          const {data} = api_result;\r\n              if(!data.status === 403) {\r\n                  setLoaded(true);\r\n                  setPageData(data)\r\n              } else {\r\n                  return 'Error'\r\n              }\r\n              \r\n    },[])\r\n   const { Provider } = HubContext\r\n   return(\r\n       <Provider value={{data:'Hello from context!'}}>\r\n           {children}\r\n       </Provider>\r\n   )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}