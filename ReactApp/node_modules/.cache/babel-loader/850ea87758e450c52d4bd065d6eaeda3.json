{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aaron\\\\Documents\\\\Clips\\\\Clips\\\\ReactApp\\\\src\\\\Components\\\\UI\\\\Chat\\\\chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport ChatContainer from '../Bubble/index';\nimport ChatHandler from './chatHandler';\nimport './index.css';\nimport io from 'socket.io-client';\nconst username = \"aaronmarsh\";\nconst socket = io(\"http://localhost:5000/web-socket\", {\n  transports: [\"websocket\", \"polling\"]\n});\n\nconst Chat = () => {\n  _s();\n\n  const [users, setUsers] = useState([]);\n  const [message, setMessage] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  useEffect(() => {\n    socket.on(\"connect\", () => {\n      socket.emit(\"username\", 'aaronmarsh');\n    });\n    socket.on(\"users\", users => {\n      setUsers(users);\n    });\n    socket.on(\"message\", message => {\n      setMessages(message);\n      console.log();\n    });\n    socket.on(\"connected\", user => {\n      setUsers(users => [...users, user]);\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"scroll\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, messages.map(m => {\n    return /*#__PURE__*/React.createElement(ChatContainer, {\n      text: m.text,\n      header: m.header,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 15\n      }\n    });\n  })));\n};\n\n_s(Chat, \"93w6bh+Z1aVYLQGzYipTKSuJkrw=\");\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["C:/Users/aaron/Documents/Clips/Clips/ReactApp/src/Components/UI/Chat/chat.js"],"names":["React","useEffect","useState","ChatContainer","ChatHandler","io","username","socket","transports","Chat","users","setUsers","message","setMessage","messages","setMessages","on","emit","console","log","user","map","m","text","header"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAO,aAAP;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,MAAMC,QAAQ,GAAG,YAAjB;AACA,MAAMC,MAAM,GAAGF,EAAE,CAAC,kCAAD,EAAqC;AACpDG,EAAAA,UAAU,EAAE,CAAC,WAAD,EAAc,SAAd;AADwC,CAArC,CAAjB;;AAKA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACY,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,EAAD,CAAxC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,MAAM,CAACS,EAAP,CAAU,SAAV,EAAqB,MAAM;AACzBT,MAAAA,MAAM,CAACU,IAAP,CAAY,UAAZ,EAAwB,YAAxB;AACD,KAFD;AAIAV,IAAAA,MAAM,CAACS,EAAP,CAAU,OAAV,EAAmBN,KAAK,IAAI;AAC1BC,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,KAFD;AAIAH,IAAAA,MAAM,CAACS,EAAP,CAAU,SAAV,EAAqBJ,OAAO,IAAI;AAC9BG,MAAAA,WAAW,CAACH,OAAD,CAAX;AACAM,MAAAA,OAAO,CAACC,GAAR;AAED,KAJD;AAMAZ,IAAAA,MAAM,CAACS,EAAP,CAAU,WAAV,EAAuBI,IAAI,IAAI;AAC7BT,MAAAA,QAAQ,CAACD,KAAK,IAAI,CAAC,GAAGA,KAAJ,EAAWU,IAAX,CAAV,CAAR;AACD,KAFD;AAKD,GApBQ,EAoBN,EApBM,CAAT;AAwBA,sBACE,uDACA;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEGN,QAAQ,CAACO,GAAT,CAAaC,CAAC,IAAI;AAClB,wBAAO,oBAAC,aAAD;AAAe,MAAA,IAAI,EAAEA,CAAC,CAACC,IAAvB;AAA6B,MAAA,MAAM,EAAED,CAAC,CAACE,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACC,GAFD,CAFH,CADA,CADF;AAYD,CAzCD;;GAAMf,I;;KAAAA,I;AA2CN,eAAeA,IAAf","sourcesContent":["import React, {useEffect, useState} from 'react'\r\nimport ChatContainer from '../Bubble/index'\r\nimport ChatHandler from './chatHandler'\r\nimport './index.css'\r\nimport io from 'socket.io-client'\r\nconst username = \"aaronmarsh\"\r\nconst socket = io(\"http://localhost:5000/web-socket\", {\r\n  transports: [\"websocket\", \"polling\"]\r\n});\r\n\r\n\r\nconst Chat = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [messages, setMessages] = useState([]);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"connect\", () => {\r\n      socket.emit(\"username\", 'aaronmarsh');\r\n    });\r\n\r\n    socket.on(\"users\", users => {\r\n      setUsers(users);\r\n    });\r\n\r\n    socket.on(\"message\", message => {\r\n      setMessages(message);\r\n      console.log()\r\n     \r\n    });\r\n\r\n    socket.on(\"connected\", user => {\r\n      setUsers(users => [...users, user]);\r\n    });\r\n\r\n\r\n  }, []);\r\n\r\n \r\n  \r\n  return (\r\n    <>\r\n    <div className='scroll'>\r\n     {\r\n       messages.map(m => {\r\n       return <ChatContainer text={m.text} header={m.header} />\r\n       })\r\n     }\r\n     </div>\r\n    \r\n    </>\r\n  );\r\n}\r\n\r\nexport default Chat;\r\n"]},"metadata":{},"sourceType":"module"}