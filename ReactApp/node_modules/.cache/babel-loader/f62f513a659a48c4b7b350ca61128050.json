{"ast":null,"code":"var _jsxFileName = \"/Users/aaronmarsh/Documents/Clips/ReactApp/src/Components/State/UserProvider.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { createContext, useState, useEffect, useReducer, useContext } from \"react\";\nimport axios from \"axios\";\nimport Cookies from \"./cookies\";\nimport { hub as HubContext } from \"./Context\";\nimport { SocketContext, socket, appState } from \"./Context\";\nimport { SocketExport } from \"../Backend/Backend\";\nimport { getNewToken, GetNewToken } from '../Backend/api';\nimport { io } from \"socket.io-client\";\nimport { FirebaseContext } from \"./Context\";\nimport { doSignOut, doCreateUserWithEmailAndPassword, fb_auth, doSignInWithEmailAndPassword } from \"./firebase\";\nimport cookies from \"./cookies\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst baseUrl = \"http://localhost:5000\"; // This context provider is passed to any component requiring the context\n\nexport const HubProvider = ({\n  children\n}) => {\n  _s();\n\n  const [data, setData] = useState(null);\n  const [pageData, setPageData] = useState();\n  const [loaded, setLoaded] = useState(false);\n  useEffect(async () => {\n    const token = Cookies.cookies.readToken();\n    const api_result = await axios.get(`${baseUrl}/hub?token${token}`);\n    const {\n      data\n    } = api_result;\n\n    if (!data.status === 403) {\n      setLoaded(true);\n      setPageData(data);\n    } else {\n      return \"Error\";\n    }\n  }, []);\n  const {\n    Provider\n  } = HubContext;\n  return /*#__PURE__*/_jsxDEV(Provider, {\n    value: {\n      data: \"Hello from context!\"\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}; /// Web Socket Provider\n\n_s(HubProvider, \"0Yow/wh9hcY82RdWqs3ii9RaJC8=\");\n\n_c = HubProvider;\nexport const Socket = ({\n  children\n}) => {\n  _s2();\n\n  const [token, setToken] = useState(\"\");\n  useEffect(() => {}, []);\n  const {\n    Provider\n  } = SocketContext;\n  return /*#__PURE__*/_jsxDEV(Provider, {\n    value: {\n      token,\n      setToken\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 10\n  }, this);\n}; /// App User State\n// export const AppState = ({ children }) => {\n//   const { Provider } = appState;\n//   const [username, setusername] = useState('default');\n//   const [uid, setUid] = useState('ccuuc');\n//   const [token, setToken] = useState();\n//   const reducer = (state, action) => {\n//     switch(action.type) {\n//       case \"increment\":\n//         return {\n//           count: state.count + 1,\n//           message: state.count\n//         }\n//       case \"decrement\":\n//         return {\n//           count: state.count - 1,\n//           message: action.message\n//         }\n//         case \"reset\":\n//           return {\n//             count: 0,\n//             message: action.message\n//           }\n//       default:\n//         throw new Error(`Unhandled action type: ${action.type}`);\n//     }\n//   }\n//   const initialState = {count: 0, message: \"\"};\n//   const [state, dispatch] = useReducer(reducer, initialState )\n//   useEffect(() => {\n//     fb_auth.onAuthStateChanged(function(user) {\n//       if (user) {\n//       setUid(user.uid)\n//       getNewToken()\n//       cookies.cookies.create({key: 'uid', value: uid})\n//       } else {\n//       }\n//     });\n//   })\n//   const store = {\n//     username: {username, setusername},\n//     uid: {uid, setUid},\n//     token: {token, setToken},\n//   };\n//   const logout = () => {\n//     alert(\"Is logging out\");\n//     try {\n//       setUid(null)\n//       setToken(null)\n//       doSignOut();\n//     } catch (e) {\n//       console.log(e);\n//       throw e;\n//     }\n//   };\n//   const actions = {\n//     logout: () => logout(),\n//     register: (data) => doCreateUserWithEmailAndPassword(data),\n//     login: async (data) => doSignInWithEmailAndPassword(data)\n//   };\n//   return (\n//     <Provider\n//       value={{state, dispatch}}\n//     >\n//       {children}\n//     </Provider>\n//   );\n// };\n\n_s2(Socket, \"uRWVyxPfKU3Lv5uAeNftFtP/ZvU=\");\n\n_c2 = Socket;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"HubProvider\");\n$RefreshReg$(_c2, \"Socket\");","map":{"version":3,"sources":["/Users/aaronmarsh/Documents/Clips/ReactApp/src/Components/State/UserProvider.js"],"names":["React","createContext","useState","useEffect","useReducer","useContext","axios","Cookies","hub","HubContext","SocketContext","socket","appState","SocketExport","getNewToken","GetNewToken","io","FirebaseContext","doSignOut","doCreateUserWithEmailAndPassword","fb_auth","doSignInWithEmailAndPassword","cookies","baseUrl","HubProvider","children","data","setData","pageData","setPageData","loaded","setLoaded","token","readToken","api_result","get","status","Provider","Socket","setToken"],"mappings":"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","sourcesContent":["import React, { createContext, useState, useEffect, useReducer, useContext } from \"react\";\nimport axios from \"axios\";\nimport Cookies from \"./cookies\";\nimport { hub as HubContext } from \"./Context\";\nimport { SocketContext, socket, appState } from \"./Context\";\nimport { SocketExport } from \"../Backend/Backend\";\nimport {getNewToken, GetNewToken} from '../Backend/api'\nimport { io } from \"socket.io-client\";\nimport { FirebaseContext } from \"./Context\";\nimport {\n  doSignOut,\n  doCreateUserWithEmailAndPassword,\n  fb_auth,\n  doSignInWithEmailAndPassword,\n} from \"./firebase\";\nimport cookies from \"./cookies\";\nconst baseUrl = \"http://localhost:5000\";\n// This context provider is passed to any component requiring the context\n\nexport const HubProvider = ({ children }) => {\n  const [data, setData] = useState(null);\n\n  const [pageData, setPageData] = useState();\n  const [loaded, setLoaded] = useState(false);\n  useEffect(async () => {\n    const token = Cookies.cookies.readToken();\n    const api_result = await axios.get(`${baseUrl}/hub?token${token}`);\n    const { data } = api_result;\n    if (!data.status === 403) {\n      setLoaded(true);\n      setPageData(data);\n    } else {\n      return \"Error\";\n    }\n  }, []);\n  const { Provider } = HubContext;\n  return (\n    <Provider value={{ data: \"Hello from context!\" }}>{children}</Provider>\n  );\n};\n\n/// Web Socket Provider\nexport const Socket = ({ children }) => {\n  const [token, setToken] = useState(\"\");\n  useEffect(() => {}, []);\n  const { Provider } = SocketContext;\n\n  return <Provider value={{ token, setToken }}>{children}</Provider>;\n};\n\n/// App User State\n\n// export const AppState = ({ children }) => {\n\n\n//   const { Provider } = appState;\n//   const [username, setusername] = useState('default');\n//   const [uid, setUid] = useState('ccuuc');\n//   const [token, setToken] = useState();\n\n//   const reducer = (state, action) => {\n//     switch(action.type) {\n//       case \"increment\":\n//         return {\n//           count: state.count + 1,\n//           message: state.count\n//         }\n//       case \"decrement\":\n//         return {\n//           count: state.count - 1,\n//           message: action.message\n//         }\n//         case \"reset\":\n//           return {\n//             count: 0,\n//             message: action.message\n//           }\n//       default:\n//         throw new Error(`Unhandled action type: ${action.type}`);\n//     }\n//   }\n//   const initialState = {count: 0, message: \"\"};\n//   const [state, dispatch] = useReducer(reducer, initialState )\n\n//   useEffect(() => {\n//     fb_auth.onAuthStateChanged(function(user) {\n//       if (user) {\n//       setUid(user.uid)\n//       getNewToken()\n//       cookies.cookies.create({key: 'uid', value: uid})\n//       } else {\n//       }\n//     });\n//   })\n \n//   const store = {\n//     username: {username, setusername},\n//     uid: {uid, setUid},\n//     token: {token, setToken},\n//   };\n//   const logout = () => {\n//     alert(\"Is logging out\");\n//     try {\n//       setUid(null)\n//       setToken(null)\n//       doSignOut();\n//     } catch (e) {\n//       console.log(e);\n//       throw e;\n//     }\n//   };\n//   const actions = {\n//     logout: () => logout(),\n//     register: (data) => doCreateUserWithEmailAndPassword(data),\n//     login: async (data) => doSignInWithEmailAndPassword(data)\n//   };\n//   return (\n//     <Provider\n//       value={{state, dispatch}}\n//     >\n//       {children}\n//     </Provider>\n//   );\n// };\n"]},"metadata":{},"sourceType":"module"}