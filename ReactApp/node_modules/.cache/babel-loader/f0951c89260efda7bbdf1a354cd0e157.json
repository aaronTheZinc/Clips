{"ast":null,"code":"import React from \"react\";\n\nconst io = require(\"socket.io-client\");\n\nconst ENDPOINT = \"http://localhost:5000\";\nconst socket = io(ENDPOINT);\nexport const initiateSocket = room => {\n  socket = io(ENDPOINT);\n  console.log(`Connecting socket...`);\n  if (socket && room) socket.emit('join', room);\n};\nexport const disconnectSocket = () => {\n  console.log('Disconnecting socket...');\n  if (socket) socket.disconnect();\n};\nexport const subscribeToChat = cb => {\n  if (!socket) return true;\n  socket.on('handShake', msg => {\n    console.log('Websocket event received!');\n    return cb(null, msg);\n  });\n};","map":{"version":3,"sources":["C:/Users/aaron/Documents/Clips/Clips/ReactApp/src/Components/Backend/Backend.js"],"names":["React","io","require","ENDPOINT","socket","initiateSocket","room","console","log","emit","disconnectSocket","disconnect","subscribeToChat","cb","on","msg"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AACA,MAAMC,EAAE,GAAGC,OAAO,CAAC,kBAAD,CAAlB;;AACA,MAAMC,QAAQ,GAAG,uBAAjB;AACA,MAAMC,MAAM,GAAGH,EAAE,CAACE,QAAD,CAAjB;AACA,OAAO,MAAME,cAAc,GAAIC,IAAD,IAAU;AACpCF,EAAAA,MAAM,GAAGH,EAAE,CAACE,QAAD,CAAX;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAa,sBAAb;AACA,MAAIJ,MAAM,IAAIE,IAAd,EAAoBF,MAAM,CAACK,IAAP,CAAY,MAAZ,EAAoBH,IAApB;AACrB,CAJI;AAKL,OAAO,MAAMI,gBAAgB,GAAG,MAAM;AACpCH,EAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACA,MAAGJ,MAAH,EAAWA,MAAM,CAACO,UAAP;AACZ,CAHM;AAIP,OAAO,MAAMC,eAAe,GAAIC,EAAD,IAAQ;AACrC,MAAI,CAACT,MAAL,EAAa,OAAO,IAAP;AACbA,EAAAA,MAAM,CAACU,EAAP,CAAU,WAAV,EAAuBC,GAAG,IAAI;AAC5BR,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACA,WAAOK,EAAE,CAAC,IAAD,EAAOE,GAAP,CAAT;AACD,GAHD;AAID,CANM","sourcesContent":["import React from \"react\";\r\nconst io = require(\"socket.io-client\");\r\nconst ENDPOINT = \"http://localhost:5000\";\r\nconst socket = io(ENDPOINT);\r\nexport const initiateSocket = (room) => {\r\n    socket = io(ENDPOINT);\r\n    console.log(`Connecting socket...`);\r\n    if (socket && room) socket.emit('join', room);\r\n  }\r\n  export const disconnectSocket = () => {\r\n    console.log('Disconnecting socket...');\r\n    if(socket) socket.disconnect();\r\n  }\r\n  export const subscribeToChat = (cb) => {\r\n    if (!socket) return(true);\r\n    socket.on('handShake', msg => {\r\n      console.log('Websocket event received!');\r\n      return cb(null, msg);\r\n    });\r\n  }"]},"metadata":{},"sourceType":"module"}