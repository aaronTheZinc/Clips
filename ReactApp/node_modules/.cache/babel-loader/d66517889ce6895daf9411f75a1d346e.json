{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useContext, useEffect } from \"react\";\nimport { SocketContext } from \"../State/Context\";\nimport { AppState as Socket } from \"../State/UserProvider\";\nimport { appState } from \"../State/Context\";\nimport Cookies from \"../State/cookies\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst io = require(\"socket.io-client\");\n\nconst ENDPOINT = \"http://localhost:5000\";\nconst socket = io(ENDPOINT);\n\nconst readCookies = () => Cookies.cookies.readToken();\n\nconst SocketComponent = () => {\n  _s();\n\n  // const {\n  //   store:{username: {username, setUsername}},\n  // } = useContext(appState);\n  useEffect(() => {\n    const token = readCookies();\n\n    if (token) {\n      socket.emit(\"handShake\", {\n        token: token\n      });\n    }\n\n    socket.on(\"handShake\", ({\n      user\n    }) => {// const {data:{username}} = user\n      // setUsername(username)\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n\n_s(SocketComponent, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = SocketComponent;\nexport const SocketProvider = ({\n  children\n}) => {\n  _s2();\n\n  const {\n    dispatch\n  } = useContext(appState);\n  useEffect(() => {\n    const token = readCookies();\n\n    if (token) {\n      socket.emit(\"handShake\", {\n        token: token\n      });\n    }\n\n    socket.on(\"handShake\", ({\n      username\n    }) => {\n      alert(username);\n      dispatch({\n        type: 'setUse',\n        username\n      });\n    });\n  }, []);\n  return children;\n};\n\n_s2(SocketProvider, \"o3sFqHzzIboOoOF6b2FSmERiAhY=\");\n\n_c2 = SocketProvider;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SocketComponent\");\n$RefreshReg$(_c2, \"SocketProvider\");","map":{"version":3,"sources":["/Users/aaronmarsh/Documents/Clips/ReactApp/src/Components/Backend/Backend.js"],"names":["React","useContext","useEffect","SocketContext","AppState","Socket","appState","Cookies","io","require","ENDPOINT","socket","readCookies","cookies","readToken","SocketComponent","token","emit","on","user","SocketProvider","children","dispatch","username","alert","type"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SAASC,QAAQ,IAAIC,MAArB,QAAmC,uBAAnC;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,OAAP,MAAoB,kBAApB;;;;AACA,MAAMC,EAAE,GAAGC,OAAO,CAAC,kBAAD,CAAlB;;AACA,MAAMC,QAAQ,GAAG,uBAAjB;AACA,MAAMC,MAAM,GAAGH,EAAE,CAACE,QAAD,CAAjB;;AAEA,MAAME,WAAW,GAAG,MAAML,OAAO,CAACM,OAAR,CAAgBC,SAAhB,EAA1B;;AAEA,MAAMC,eAAe,GAAG,MAAM;AAAA;;AAC5B;AACA;AACA;AACAb,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMc,KAAK,GAAGJ,WAAW,EAAzB;;AACA,QAAII,KAAJ,EAAW;AACTL,MAAAA,MAAM,CAACM,IAAP,CAAY,WAAZ,EAAyB;AAAED,QAAAA,KAAK,EAAEA;AAAT,OAAzB;AACD;;AAEDL,IAAAA,MAAM,CAACO,EAAP,CAAU,WAAV,EAAuB,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAc,CACnC;AACA;AACD,KAHD;AAID,GAVQ,EAUN,EAVM,CAAT;AAWA,sBAAO,qCAAP;AACD,CAhBD;;GAAMJ,e;;KAAAA,e;AAiBN,OAAO,MAAMK,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAC9C,QAAM;AAAEC,IAAAA;AAAF,MAAerB,UAAU,CAACK,QAAD,CAA/B;AACAJ,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMc,KAAK,GAAGJ,WAAW,EAAzB;;AACA,QAAII,KAAJ,EAAW;AACTL,MAAAA,MAAM,CAACM,IAAP,CAAY,WAAZ,EAAyB;AAAED,QAAAA,KAAK,EAAEA;AAAT,OAAzB;AACD;;AAEDL,IAAAA,MAAM,CAACO,EAAP,CAAU,WAAV,EAAuB,CAAC;AAAEK,MAAAA;AAAF,KAAD,KAAkB;AACvCC,MAAAA,KAAK,CAACD,QAAD,CAAL;AACAD,MAAAA,QAAQ,CAAC;AAACG,QAAAA,IAAI,EAAE,QAAP;AAAiBF,QAAAA;AAAjB,OAAD,CAAR;AACD,KAHD;AAID,GAVQ,EAUN,EAVM,CAAT;AAWA,SAAOF,QAAP;AACD,CAdM;;IAAMD,c;;MAAAA,c","sourcesContent":["import React, { useContext, useEffect } from \"react\";\nimport { SocketContext } from \"../State/Context\";\nimport { AppState as Socket } from \"../State/UserProvider\";\nimport { appState } from \"../State/Context\";\nimport Cookies from \"../State/cookies\";\nconst io = require(\"socket.io-client\");\nconst ENDPOINT = \"http://localhost:5000\";\nconst socket = io(ENDPOINT);\n\nconst readCookies = () => Cookies.cookies.readToken();\n\nconst SocketComponent = () => {\n  // const {\n  //   store:{username: {username, setUsername}},\n  // } = useContext(appState);\n  useEffect(() => {\n    const token = readCookies();\n    if (token) {\n      socket.emit(\"handShake\", { token: token });\n    }\n\n    socket.on(\"handShake\", ({ user }) => {\n      // const {data:{username}} = user\n      // setUsername(username)\n    });\n  }, []);\n  return <></>;\n};\nexport const SocketProvider = ({ children }) => {\n  const { dispatch } = useContext(appState);\n  useEffect(() => {\n    const token = readCookies();\n    if (token) {\n      socket.emit(\"handShake\", { token: token });\n    }\n\n    socket.on(\"handShake\", ({ username }) => {\n      alert(username)\n      dispatch({type: 'setUse', username})\n    });\n  }, []);\n  return children ;\n};\n"]},"metadata":{},"sourceType":"module"}